{"version":3,"sources":["webpack://PannellumReact/webpack/universalModuleDefinition","webpack://PannellumReact/webpack/bootstrap","webpack://PannellumReact/./node_modules/global/window.js","webpack://PannellumReact/./node_modules/global/document.js","webpack://PannellumReact/./node_modules/mux.js/lib/utils/stream.js","webpack://PannellumReact/./node_modules/mux.js/lib/mp4/probe.js","webpack://PannellumReact/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://PannellumReact/./node_modules/url-toolkit/src/url-toolkit.js","webpack://PannellumReact/./node_modules/mux.js/lib/m2ts/stream-types.js","webpack://PannellumReact/./node_modules/tsml/tsml.js","webpack://PannellumReact/./node_modules/mux.js/lib/mp4/transmuxer.js","webpack://PannellumReact/./node_modules/xhr/index.js","webpack://PannellumReact/./node_modules/videojs-vtt.js/lib/browser-index.js","webpack://PannellumReact/./src/pannellum/js/libpannellum.js","webpack://PannellumReact/./src/pannellum/js/pannellum.js","webpack://PannellumReact/./src/pannellum/js/RequestAnimationFrame.js","webpack://PannellumReact/(webpack)/buildin/global.js","webpack://PannellumReact/./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack://PannellumReact/./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack://PannellumReact/./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack://PannellumReact/./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack://PannellumReact/./node_modules/safe-json-parse/tuple.js","webpack://PannellumReact/./node_modules/mux.js/lib/mp4/index.js","webpack://PannellumReact/./node_modules/mux.js/lib/tools/ts-inspector.js","webpack://PannellumReact/./node_modules/is-function/index.js","webpack://PannellumReact/./node_modules/parse-headers/parse-headers.js","webpack://PannellumReact/./node_modules/trim/index.js","webpack://PannellumReact/./node_modules/for-each/index.js","webpack://PannellumReact/./node_modules/is-callable/index.js","webpack://PannellumReact/./node_modules/xtend/immutable.js","webpack://PannellumReact/./node_modules/videojs-vtt.js/lib/vtt.js","webpack://PannellumReact/./node_modules/videojs-vtt.js/lib/vttcue.js","webpack://PannellumReact/./node_modules/videojs-vtt.js/lib/vttregion.js","webpack://PannellumReact/./node_modules/mux.js/lib/utils/bin.js","webpack://PannellumReact/./node_modules/mux.js/lib/mp4/frame-utils.js","webpack://PannellumReact/./node_modules/mux.js/lib/mp4/track-decode-info.js","webpack://PannellumReact/./node_modules/mux.js/lib/m2ts/m2ts.js","webpack://PannellumReact/./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack://PannellumReact/./node_modules/mux.js/lib/codecs/adts.js","webpack://PannellumReact/./node_modules/mux.js/lib/codecs/h264.js","webpack://PannellumReact/./node_modules/mux.js/lib/utils/exp-golomb.js","webpack://PannellumReact/./node_modules/mux.js/lib/aac/index.js","webpack://PannellumReact/./node_modules/mux.js/lib/data/silence.js","webpack://PannellumReact/./node_modules/mux.js/lib/utils/clock.js","webpack://PannellumReact/./node_modules/mux.js/lib/mp4/caption-parser.js","webpack://PannellumReact/./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack://PannellumReact/./node_modules/mux.js/lib/m2ts/probe.js","webpack://PannellumReact/./node_modules/mux.js/lib/aac/probe.js","webpack://PannellumReact/./src/elements/Pannellum.js","webpack://PannellumReact/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://PannellumReact/./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack://PannellumReact/./node_modules/pkcs7/dist/pkcs7.es.js","webpack://PannellumReact/./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack://PannellumReact/./node_modules/video.js/dist/video.es.js","webpack://PannellumReact/./src/pannellum/js/videojs-pannellum-plugin.js","webpack://PannellumReact/./src/elements/PannellumVideo.js","webpack://PannellumReact/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__4__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","win","self","doccy","topLevel","minDoc","document","Stream","this","init","listeners","on","type","listener","concat","off","index","indexOf","slice","splice","trigger","callbacks","length","args","arguments","push","apply","dispose","pipe","destination","data","flushSource","flush","findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","path","size","end","subresults","results","byteLength","subarray","buffer","result","String","fromCharCode","reduce","trak","tkhd","version","id","mdhd","fragment","trafs","baseTimes","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","videoTrackIds","forEach","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","trim","alwaysNormalize","basePartsForNormalise","parseURL","Error","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","exec","builtParts","params","query","baseURLPath","newPath","substring","lastIndexOf","url","parts","split","reverse","join","replace","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","clean","sa","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","isLikelyAacData","arrayEquals","sumFrameByteLengths","mp4","frameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","AacStream","coneOfSilence","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","charCodeAt","a","b","array","sum","track","options","adtsFrames","sequenceNumber","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","collectDtsInfo","prop","setEarliestDts","earliestDts","timelineStartInfo","baseMediaDecodeTime","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","frames","moof","mdat","boxes","trimAdtsFramesByEarliestDts_","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","prefixWithSilence_","samples","generateSampleTable_","concatenateFrameData_","Uint8Array","set","clearDtsInfo","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","audioTsToVideoTs","samplerate","ceil","max","floor","ONE_SECOND_IN_TS","videoTsToAudioTs","minSegmentDts","filter","currentFrame","dts","minSegmentPts","duration","dataOffset","config","pps","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","nalUnitType","sps","gopForFusion","gops","shift","resetStream_","groupNalsIntoFrames","groupFramesIntoGops","keyFrame","getGopForFusion_","unshift","nalCount","pts","extendFirstKeyFrame","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","generateSampleTable","concatenateNalData","undefined","dtsDistance","nearestGopObj","currentGop","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","text","audioTrack","caption","id3","initSegment","offset","event","captions","captionStreams","info","timelineStartPts","startPts","endTime","endPts","stream","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","MetadataStream","aacStream","audioTimestampRolloverStream","TimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","frame","setTimestamp","timeStamp","audioSegmentStream","codec","setupTsPipeline","packetStream","TransportPacketStream","parseStream","TransportParseStream","elementaryStream","ElementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","CaptionStream","tracks","videoSegmentStream","setBaseMediaDecodeTime","discontinuity","reset","isAac","resetCaptions","isFunction","parseHeaders","xtend","initParams","uri","callback","createXHR","_createXHR","called","err","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","e","getBody","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","obj","isEmpty","beforeSend","send","iterator","forEachArray","toUpperCase","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","libpannellum","Renderer","container","program","gl","vs","fs","fallbackImgSize","world","vtmps","pose","image","imageType","dynamic","texCoordBuffer","cubeVertBuf","cubeVertTexCoordBuf","cubeVertIndBuf","globalParams","canvas","createElement","multiresNodeSort","level","multiresNodeRenderSort","diff","MultiresNode","vertices","side","x","y","testMultiresNode","rotPersp","node","pitch","yaw","hfov","v","check1","checkInView","check2","check3","check4","testX","testY","checkSquareInView","z","sqrt","theta","asin","ydiff","atan2","PI","abs","acos","sin","cos","inCurrent","k","nodeCache","nodeCacheTimestamp","currentNodes","cubeSize","cubeResolution","maxLevel","numTiles","invTileResolution","doubleTileSize","tileResolution","lastTileSize","f","ntmp","children","f1","f2","f3","i1","i2","i3","fullpath","j","rotateMatrix","angle","axis","transposeMatrix4","style","width","height","appendChild","_image","_imageType","_dynamic","haov","vaov","voffset","console","log","detachShader","deleteShader","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","texture","deleteTexture","deleteProgram","cubeImgWidth","faceMissing","fillMissingFaces","imgSize","nbytes","imageArray","Uint8ClampedArray","rgb","backgroundColor","backgroundSquare","ImageData","navigator","userAgent","toLowerCase","match","getContext","alpha","depth","getError","handleWebGLError1286","appVersion","removeChild","className","basePath","fallbackPath","sides","loaded","onLoad","faceCanvas","faceContext","drawImage","imgData","getImageData","putImageData","incLoaded","faceImg","Image","crossOrigin","src","encodeURI","extension","maxWidth","getParameter","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","horizonPitch","horizonRoll","glBindType","TEXTURE_2D","viewport","drawingBufferWidth","drawingBufferHeight","createShader","VERTEX_SHADER","vertexSrc","vMulti","shaderSource","compileShader","FRAGMENT_SHADER","fragmentSrc","fragEquirectangular","TEXTURE_CUBE_MAP","fragCube","fragMulti","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","drawInProgress","color","clearColor","clear","COLOR_BUFFER_BIT","texCoordLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","aspectRatio","getUniformLocation","uniform1f","psi","h","vo","rot","uniform4fv","createTexture","bindTexture","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGB","UNSIGNED_BYTE","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertPosLocation","Uint16Array","perspUniform","cubeUniform","destroy","contains","getExtension","loseContext","resize","pixelRatio","devicePixelRatio","clientWidth","clientHeight","setPose","render","focal","roll","orig_pitch","orig_yaw","w","roll_adj","vfov","atan","tan","drawArrays","TRIANGLES","perspMatrix","aspect","znear","zfar","fovy","makePersp","newLevel","checkZoom","matrix","makeMatrix4","uniformMatrix4fv","rotatePersp","sort","removed","pendingTextureRequests","textureLoad","processNextTile","textureLoaded","drawElements","UNSIGNED_SHORT","multiresDraw","returnImage","toDataURL","transforms","u","zoom","transform","faces","keys","face","querySelector","webkitTransform","isLoading","getCanvas","loadTexture","cacheTop","textureImageCache","TextureImageLoader","loadFn","img","tex","processLoadedTexture","til","req","releaseTextureImageLoader","addEventListener","_crossOrigin","vpp","applyRotPerspToVec","winX","winY","winZ","ret","round","fragEquiCubeBase","renderer","imagetype","pannellum","Viewer","initialConfig","preview","panoImage","prevTime","autoRotateStart","origHfov","origPitch","_this","isUserInteracting","latestInteraction","Date","now","onPointerDownPointerX","onPointerDownPointerY","onPointerDownPointerDist","onPointerDownYaw","onPointerDownPitch","keysDown","Array","fullscreenActive","error","listenersAdded","speed","animating","orientation","orientationYawOffset","autoRotateSpeed","animatedMove","externalEventListeners","specifiedPhotoSphereExcludes","update","hotspotsCreated","defaultConfig","minHfov","maxHfov","minPitch","maxPitch","minYaw","maxYaw","vOffset","autoRotate","autoRotateInactivityDelay","autoRotateStopDelay","northOffset","showFullscreenCtrl","doubleClickZoom","keyboardZoom","mouseZoom","showZoomCtrl","autoLoad","showControls","orientationOnByDefault","hotSpotDebug","avoidShowingBackground","animationTimingFunction","draggable","disableKeyboardCtrl","touchPanSpeedCoeffFactor","capturedKeyNumbers","loadButtonLabel","loadingLabel","bylineLabel","noPanoramaError","fileAccessError","malformedURLError","iOS8WebGLError","genericWebGLError","textureSizeError","unknownError","getElementById","classList","add","tabIndex","uiContainer","renderContainer","dragFix","aboutMsg","innerHTML","aboutMessage","pos","mousePosition","left","top","t1","t2","display","opacity","preventDefault","infoDisplay","hotSpotDebugIndicator","title","author","load","box","boxp","lbox","lbar","lbarFill","msg","errorMsg","controls","processOptions","zoomIn","setHfov","animateInit","zoomOut","fullscreen","toggleFullscreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","stopOrientation","startOrientation","stopPropagation","orientationSupport","startOrientationIfSupported","DeviceOrientationEvent","deviceOrientationTest","removeEventListener","beta","gamma","compass","div","getElementsByTagName","multiRes","test","panorama","anError","strings","itemsToLoad","onImageLoad","onError","href","target","textContent","outerHTML","cubeMap","absoluteURL","sanitizeURL","URL","revokeObjectURL","onloadend","reader","FileReader","flagIndex","start","ignoreGPanoXMP","xmpData","getTag","tag","Number","xmp","fullWidth","croppedWidth","fullHeight","croppedHeight","topPixels","heading","createObjectURL","readAsBinaryString","readAsText","parseGPanoXMP","lengthComputable","unit","numerator","denominator","percent","toFixed","remove","RegExp","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentDoubleClick","onFullScreenChange","onDocumentResize","onDocumentKeyPress","onDocumentKeyUp","clearKeys","pointerAction","touchAction","onDocumentPointerDown","onDocumentPointerMove","onDocumentPointerUp","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","pointerEnabled","renderInitCallback","renderInit","fireEvent","bounds","getBoundingClientRect","clientX","clientY","focus","coords","mouseEventToCoords","stopAnimation","lookAt","canvasWidth","canvasHeight","pos0","targetTouches","pos1","clientDist","touchmovePanSpeedCoeff","firstScene","mergeConfig","default","pointerIDs","pointerCoordinates","pointerType","pointerId","defined","wheelDeltaY","wheelDelta","detail","keynumber","which","keycode","changeKey","keyChanged","performance","animateMove","normTime","startPosition","endPosition","callbackArgs","animate","tmpyaw","hoffcut","hfov2","vfov2","transposed","yawRange","pitchRange","isNaN","renderHotSpots","onRender","requestAnimationFrame","newTime","isKeyDown","prevPitch","prevYaw","prevZoom","timeDiff","yawDiff","maxSpeed","keyRepeat","autoRotateStartTime","Quaternion","computeQuaternion","quaternion","taitBryanToQuaternion","multiply","orientationListener","q","toEulerAngles","sceneFadeDuration","fadeImg","hotSpots","createHotSpot","createHotSpots","hs","cssClass","escapeHTML","span","video","paddingTop","sceneId","onclick","ontouchend","clicked","loadScene","targetPitch","targetYaw","targetHfov","createTooltipFunc","createTooltipArgs","scrollWidth","marginLeft","offsetWidth","marginTop","scrollHeight","clickHandlerFunc","clickHandlerArgs","renderHotSpot","hsPitchSin","hsPitchCos","configPitchSin","configPitchCos","yawCos","visibility","yawSin","hfovTan","coord","rollSin","rollCos","offsetHeight","MozTransform","photoSphereExcludes","scenes","scene","isPreview","backgroundImage","sanitizeURLForCss","previewTitle","previewAuthor","link","message","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","isFullScreen","innerWidth","screen","innerHeight","mozFullScreen","webkitIsFullScreen","msFullscreenElement","constrainHfov","newHfov","fadeDone","workingPitch","workingYaw","workingHfov","transition","current","parentNode","destroyHotSpots","isLoaded","Boolean","getPitch","setPitch","animated","getPitchBounds","setPitchBounds","getYaw","setYaw","getYawBounds","setYawBounds","getHfov","getHfovBounds","setHfovBounds","getNorthOffset","setNorthOffset","getHorizonRoll","setHorizonRoll","getHorizonPitch","setHorizonPitch","startAutoRotate","stopAutoRotate","getRenderer","setUpdate","bool","getScene","addScene","removeScene","getConfig","getContainer","addHotSpot","removeHotSpot","hotSpotId","isOrientationSupported","isOrientationActive","viewer","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","g","Function","eval","dinf","esds","ftyp","mfhd","minf","moov","mvex","mvhd","mdia","sdtp","stbl","stsd","trex","trun","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","audio","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","trackFragments","bytes","flags","dependsOn","isDependedOn","videoSample","audioSample","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","fileType","movie","cea708Parser","captionPackets_","ccStreams_","Cea608Stream","cc","sei","userData","newCaptionPackets","parseSei","escapedRBSP","payloadType","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","latestDts_","ignoreNextEqualDts_","numSameDts_","parseCaptionPackets","elem","idx","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","ccData","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","name_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","content","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","format","popOn","baseRow","rollUp","paintOn","payloadSize","count","discardEmulationPreventionBytes","newLength","newData","emulationPreventionBytesPositions","sourceIndex","handleRollover","reference","direction","lastDTS","referenceDTS","type_","reviver","generator","probe","CaptionParser","StreamTypes","ts","aac","parseAudioPes_","pmt","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","pes","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","inspect","baseTimestamp","audioCount","sampleRate","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","inspectAac_","segmentInfo","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","fn","string","toString","alert","confirm","prompt","arg","isArray","str","right","isCallable","toStr","list","thisArg","TypeError","receiver","len","charAt","forEachString","forEachObject","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","tryFunctionObject","strClass","source","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","Settings","values","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","cue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","substr","settings","region","alt","vals","vals0","integer","vertical","line","lineAlign","snapToLines","position","middle","positionAlign","consumeCueSettings","constructor","BadSignature","dflt","defaultKey","has","parseInt","parseFloat","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape1","unescape","shouldAdd","localName","annotation","tagName","rootDiv","tagStack","createTextNode","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","charCode","currentRange","StyleBox","CueStyleBox","styleOptions","cueDiv","styles","bottom","writingMode","unicodeBidi","applyStyles","nodeStack","childNodes","pushNodes","nextTextNode","innerText","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","trackList","computeLinePos","step","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","val","toMove","overlaps","b2","getSimpleBoxPosition","StringDecoder","decode","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","processCues","cues","overlay","firstChild","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","Parser","decoder","state","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","parseHeader","ontimestampmap","MPEGTS","LOCAL","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","oncue","onflush","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperties","pauseOnExit","setting","findDirectionSetting","SyntaxError","getCueAsHTML","scrollSetting","up","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","sampleForFrame","currentNal","baseDataOffset","nalsByteLength","numberOfNals","maxSegmentDts","maxSegmentPts","m2tsStreamTypes","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","streamType","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","forceFlush","packetFlushable","packetData","ptsDtsFlags","packetLength","dataAlignmentIndicator","parsePes","PAT_PID","MP2T_PACKET_LENGTH","percentEncode","parseUtf8","parseIso88591","parseSyncSafeInteger","tagParsers","TXXX","description","WXXX","PRIV","owner","privateData","debug","descriptor","tagSize","bufferSize","chunk","frameStart","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","ExpGolomb","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","readExpGolomb","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","readUnsignedByte","skipUnsignedExpGolomb","readUnsignedExpGolomb","skipBits","readBoolean","skipExpGolomb","readBits","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBytes","bits","valu","skipLeadingZeros","leadingZeroCount","clz","header","returnSize","lowThree","bytesLeft","tempLength","highPrefix","lowPrefix","zeroFill","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","metaTable","arr","part","makeTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","seconds","mapToSample","approximateOffset","parseCaptionNals","segment","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","parseTfhd","parseTfdt","truns","avcStream","seiNal","lastMatchedSample","avcView","matchingSample","findSeiNals","defaultSampleDuration","defaultSampleSize","allSamples","parseTrun","parseSamples","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","inspectMp4","textifyMp4","parseMp4Date","parseSampleFlags","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","escape","nalParse","language","creationTime","modificationTime","streamDescriptor","rate","volume","Uint32Array","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","ab","ArrayBuffer","inspectedMp4","indent","prefix","byte","textify","parseHdlr","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","Pannellum","props","_classCallCheck","_possibleConstructorReturn","_PureComponent","renderImage","hotspots","hotspotArray","hotspot","random","tooltip","hotspotTooltip","tooltipArg","handleClick","handleClickHotspot","handleClickArg","jsonConfig","hotspotDebug","onScenechange","onScenechangefadedone","onErrorcleared","onMousedown","onMouseup","onTouchstart","onTouchend","componentDidMount","hotSpotDiv","setAttribute","hDiv","outDiv","inDiv","getViewer","forceRender","componentDidUpdate","prevProps","prevState","snapshot","_this2","_props","divStyle","external_root_React_commonjs2_react_commonjs_react_amd_react_default","ref","imageNode","PureComponent","defaultProps","Hotspot","classCallCheck","instance","Constructor","_extends","assign","inherits","subClass","superClass","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","LineStream","_Stream","nextNewline","parseAttributes","attributes","attrs","attr","ParseStream","customParsers","tagType","number","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_ref","expression","customType","dataParser","lineStream","uris","currentUri","currentMap","_key","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","segments","entry","mediaGroup","rendition","allow-cache","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","playlist","stream-inf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","program-date-time","targetduration","targetDuration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","timeline","comment","custom","formatVideoPlaylist","_ref3","_attributes3","CODECS","codecs","bandwidth","periodIndex","resolvedUri","contentProtection","_typeof","isObject","merge","_len","objects","mpd_parser_es_resolveUrl","baseUrl","relativeUrl","url_toolkit_default","window_default","location","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","ranges","startRange","endRange","getLiveRValue","time","NOW","clientOffset","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","minimumUpdatePeriod","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","sourceDuration","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","segmentTime","nextS","flatten","lists","from","segmentRange","static","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","Time","mpd_parser_es_errors","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","base","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parseDate","parsedValue","mpd_parser_es_parseAttributes","el","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","acc","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","role","roleAttributes","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","toAdaptationSets","mpd_parser_es_stringToMpdXml","manifestString","xml","DOMParser","parseFromString","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","mimeType","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","master","label","_attributes","formatAudioPlaylist","organizeAudioPlaylists","subs","_ref2","_attributes2","formatVttPlaylist","organizeVttPlaylists","toM3u8","toPlaylists","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","aes_decrypter_es_classCallCheck","createClass","protoProps","staticProps","aes_decrypter_es_possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","delay","timeout_","aes_decrypter_es_inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","STEP","asyncStream_","decryptChunk_","padded","unpad","video_es_version","video_es_history","video_es_logByType","lvl","levels","lvlRegExp","all","warn","history","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","video_es_typeof","video_es_classCallCheck","video_es_inherits","video_es_possibleConstructorReturn","taggedTemplateLiteralLoose","raw","video_es_toString","video_es_isObject","each","video_es_assign","sources","isPlain","video_es_computedStyle","getComputedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","parent","createQuerier","selector","context","ctx","createEl","properties","getOwnPropertyNames","propName","tsml_default","attrName","appendContent","prependTo","child","insertBefore","hasClass","classToCheck","classRegExp","addClass","classToAdd","removeClass","classToRemove","toggleClass","classToToggle","predicate","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","onselectstart","unblockTextSelection","rect","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","doc","keyCode","_supportsPassive","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs","video_es_autoSetup","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","video_es_createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","last","video_es_debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","EVENT_MAP","queueTrigger","Map","oldTimeout","delete","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","toTitleCase","mergeOptions","video_es_Component","Component","ready","play","player_","options_","id_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","video_es_i","dist_video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","addToBody","host","protocol","details","video_es_getAbsoluteURL","getFileExtension","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","errors","groupCollapsed","groupEnd","video_es_loadTrack","xhr_default","responseBody","loaded_","tech_","loadHandler","video_es_TextTrack","_Track","TextTrack","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mov","m4v","mkv","mp3","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleFocus","handleBlur","PosterImage","_ClickableComponent","poster","setSrc","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","toggleDisplay","preselectTrack","modes","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","implementation","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","calculateDistance","stepBack","stepForward","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","isFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","video_es_MenuButton","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","getSelectedOptionValue","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","video_es_Player","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","clearCacheForPlayer","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","catch","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","flip","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","_this11","sourceTech","str1","str2","titleCaseEquals","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","dist_video_es_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","video_es_resolveUrl","classCallCheck$1","createClass$1","inherits$1","possibleConstructorReturn$1","slicedToArray$1","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","getPrototypeOf","hls_","playlistRequestError","haveMetadata","xhr$$1","startingState","media_","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","intervalDuration","endSequence","expired","backward","forward","backwardDuration","forwardDuration","video_es_duration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","seekableStart","seekableEnd","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","hexDump","utils","tagDump","textRanges","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","Blob","blob","getBlob","TransmuxWorker","document$$1","_findBox","mp4Generator","toUnsigned$1","captionPacketParser","streamTypes","_MetadataStream","timestampRolloverStream","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","_H264Stream","_NalByteStream","expGolomb","_AacStream","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","silence","ONE_SECOND_IN_TS$2","_textifyMp","transmuxer","parseType$1","parse$$1","mp4Inspector","discardEmulationPreventionBytes$1","CaptionStream$1","captionStream$$1","classCallCheck$$1","createClass$$1","MessageHandlers","initArray","typedArray","action","gopInfo","wireTransmuxerEvents","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","playlistUpdate","group","_playlistUpdate","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","clientOffset_","phonyUri","_phonyUri","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","Range","byterangeEnd","byterangeStr","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","endOfAllRequests","worstError","prev","getMostImportantError","encryptedBytes","decryptionHandler","requestId","decryptSegment","handleProgress","progressFn","stats","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","appendedLastSegment","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","endOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","timingInfo","probeSegmentInfo","containsAudio","containsVideo","illegalMediaSwitchError","startingMedia","newSegmentMedia","illegalMediaSwitch","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","distance","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","possibleConstructorReturn$$1","AsyncStream$$1","inherits$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","mapLegacyAvcCodecs","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","fastChangeFunction","masterPlaylistController_","fastQualityChange_","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","enableFunction","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","emeKeySystems","keySystems","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","smoothQualityChange_","pauseLoading","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","renditionSelectionMixin","setupQualityLevels_","qualityLevels_","addQualityLevel","handleHlsLoadedMetadata","get$$1","get$2","HlsSourceHandler","supportedType","video_es","vid","pnlmContainer","pnlmViewer","PannellumVideo","PannellumVideo_classCallCheck","PannellumVideo_possibleConstructorReturn","renderVideo","videoNode","cuurentHS","componentWillUnmount","data-vjs-player","__webpack_exports__","elements_Pannellum","elements_PannellumVideo"],"mappings":"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","file":"pannellum-react.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PannellumReact\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"PannellumReact\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__4__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n// Helper functions\nvar\n  isLikelyAacData,\n  arrayEquals,\n  sumFrameByteLengths;\n\nisLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\narrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nsumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.prefixWithSilence_(track, frames);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = this.generateSampleTable_(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(this.concatenateFrameData_(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n\n  // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n  this.prefixWithSilence_ = function(track, frames) {\n    var\n      baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n    // determine frame clock duration based on sample rate, round up to avoid overfills\n    frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration =\n        baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n      // number of full frames in the audio gap\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    }\n\n    // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n    if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = coneOfSilence[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      frames.splice(i, 0, {\n        data: silentFrame\n      });\n    }\n\n    track.baseMediaDecodeTime -=\n      Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n  };\n\n  // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n  this.trimAdtsFramesByEarliestDts_ = function(adtsFrames) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    }\n\n    // We will need to recalculate the earliest segment Dts\n    track.minSegmentDts = Infinity;\n\n    return adtsFrames.filter(function(currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      }\n      // Otherwise, discard it\n      return false;\n    });\n  };\n\n  // generate the track's raw mdat data from an array of frames\n  this.generateSampleTable_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  };\n\n  // generate the track's sample table from an array of frames\n  this.concatenateFrameData_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = (caption.startPts - timelineStartPts);\n    caption.startTime /= 90e3;\n    caption.endTime = (caption.endPts - timelineStartPts);\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = (id3.pts - timelineStartPts);\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    this.baseMediaDecodeTime = baseMediaDecodeTime;\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/*\n * libpannellum - A WebGL and CSS 3D transform based Panorama Renderer\n * Copyright (c) 2012-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.libpannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama renderer.\n * @constructor\n * @param {HTMLElement} container - The container element for the renderer.\n */\n  function Renderer(container) {\n    var canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = '100%';\n    container.appendChild(canvas);\n\n    var program, gl, vs, fs;\n    var fallbackImgSize;\n    var world;\n    var vtmps;\n    var pose;\n    var image, imageType, dynamic;\n    var texCoordBuffer, cubeVertBuf, cubeVertTexCoordBuf, cubeVertIndBuf;\n    var globalParams;\n\n    /**\n     * Initialize renderer.\n     * @memberof Renderer\n     * @instance\n     * @param {Image|Array|Object} image - Input image; format varies based on\n     *      `imageType`. For `equirectangular`, this is an image; for\n     *      `cubemap`, this is an array of images for the cube faces in the\n     *      order [+z, +x, -z, -x, +y, -y]; for `multires`, this is a\n     *      configuration object.\n     * @param {string} imageType - The type of the image: `equirectangular`,\n     *      `cubemap`, or `multires`.\n     * @param {boolean} dynamic - Whether or not the image is dynamic (e.g. video).\n     * @param {number} haov - Initial horizontal angle of view.\n     * @param {number} vaov - Initial vertical angle of view.\n     * @param {number} voffset - Initial vertical offset angle.\n     * @param {function} callback - Load callback function.\n     * @param {Object} [params] - Other configuration parameters (`horizonPitch`, `horizonRoll`, `backgroundColor`).\n     */\n    this.init = function(_image, _imageType, _dynamic, haov, vaov, voffset, callback, params) {\n      // Default argument for image type\n      if (_imageType === undefined)\n      {_imageType = 'equirectangular';}\n\n      if (_imageType != 'equirectangular' && _imageType != 'cubemap' &&\n            _imageType != 'multires') {\n        console.log('Error: invalid image type specified!');\n        throw { type: 'config error' };\n      }\n\n      imageType = _imageType;\n      image = _image;\n      dynamic = _dynamic;\n      globalParams = params || {};\n\n      // Clear old data\n      if (program) {\n        if (vs) {\n          gl.detachShader(program, vs);\n          gl.deleteShader(vs);\n        }\n        if (fs) {\n          gl.detachShader(program, fs);\n          gl.deleteShader(fs);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        if (program.texture)\n        {gl.deleteTexture(program.texture);}\n        if (program.nodeCache)\n        {for (var i = 0; i < program.nodeCache.length; i++)\n          {gl.deleteTexture(program.nodeCache[i].texture);}}\n        gl.deleteProgram(program);\n        program = undefined;\n      }\n      pose = undefined;\n\n      var s;\n      var faceMissing = false;\n      var cubeImgWidth;\n      if (imageType == 'cubemap') {\n        for (s = 0; s < 6; s++) {\n          if (image[s].width > 0) {\n            if (cubeImgWidth === undefined)\n            {cubeImgWidth = image[s].width;}\n            if (cubeImgWidth != image[s].width)\n            {console.log('Cube faces have inconsistent widths: ' + cubeImgWidth + ' vs. ' + image[s].width);}\n          } else\n          {faceMissing = true;}\n        }\n      }\n      function fillMissingFaces(imgSize) {\n        if (faceMissing) { // Fill any missing fallback/cubemap faces with background\n          var nbytes = imgSize * imgSize * 4; // RGB, plus non-functional alpha\n          var imageArray = new Uint8ClampedArray(nbytes);\n          var rgb = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n          rgb[0] *= 255;\n          rgb[1] *= 255;\n          rgb[2] *= 255;\n          // Maybe filling could be done faster, see e.g. https://stackoverflow.com/questions/1295584/most-efficient-way-to-create-a-zero-filled-javascript-array\n          for (var i = 0; i < nbytes; i++) {\n            imageArray[i++] = rgb[0];\n            imageArray[i++] = rgb[1];\n            imageArray[i++] = rgb[2];\n          }\n          var backgroundSquare = new ImageData(imageArray, imgSize, imgSize);\n          for (s = 0; s < 6; s++) {\n            if (image[s].width == 0)\n            {image[s] = backgroundSquare;}\n          }\n        }\n      }\n        \n      // This awful browser specific test exists because iOS 8/9 and IE 11\n      // don't display non-power-of-two cubemap textures but also don't\n      // throw an error (tested on an iPhone 5c / iOS 8.1.3 / iOS 9.2 /\n      // iOS 10.3.1).\n      // Therefore, the WebGL context is never created for these browsers for\n      // NPOT cubemaps, and the CSS 3D transform fallback renderer is used\n      // instead.\n      if (!(imageType == 'cubemap' &&\n            (cubeImgWidth & (cubeImgWidth - 1)) !== 0 &&\n            (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n        // Enable WebGL on canvas\n        if (!gl)\n        {gl = canvas.getContext('experimental-webgl', { alpha: false, depth: false });}\n        if (gl && gl.getError() == 1286)\n        {handleWebGLError1286();}\n      }\n        \n      // If there is no WebGL, fall back to CSS 3D transform renderer.\n      // This will discard the image loaded so far and load the fallback image.\n      // While browser specific tests are usually frowned upon, the\n      // fallback viewer only really works with WebKit/Blink and IE 10/11\n      // (it doesn't work properly in Firefox).\n      if (!gl && ((imageType == 'multires' && image.hasOwnProperty('fallbackPath')) ||\n            imageType == 'cubemap') &&\n            ('WebkitAppearance' in document.documentElement.style ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./) ||\n            navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n        // Remove old world if it exists\n        if (world) {\n          container.removeChild(world);\n        }\n            \n        // Initialize renderer\n        world = document.createElement('div');\n        world.className = 'pnlm-world';\n            \n        // Add images\n        var path;\n        if (image.basePath) {\n          path = image.basePath + image.fallbackPath;\n        } else {\n          path = image.fallbackPath;\n        }\n        var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n        var loaded = 0;\n        var onLoad = function() {\n          // Draw image on canvas\n          var faceCanvas = document.createElement('canvas');\n          faceCanvas.className = 'pnlm-face pnlm-' + sides[this.side] + 'face';\n          world.appendChild(faceCanvas);\n          var faceContext = faceCanvas.getContext('2d');\n          faceCanvas.style.width = this.width + 4 + 'px';\n          faceCanvas.style.height = this.height + 4 + 'px';\n          faceCanvas.width = this.width + 4;\n          faceCanvas.height = this.height + 4;\n          faceContext.drawImage(this, 2, 2);\n          var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n          var data = imgData.data;\n                \n          // Duplicate edge pixels\n          var i;\n          var j;\n          for (i = 2; i < faceCanvas.width - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n            }\n          }\n          for (i = 2; i < faceCanvas.height - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n            data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n          }\n          for (i = 1; i < faceCanvas.width - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n            }\n          }\n          for (i = 1; i < faceCanvas.height - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width) * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[j] = data[(faceCanvas.width + 1) * 4 + j];\n            data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n            data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n          }\n                \n          // Draw image width duplicated edge pixels on canvas\n          faceContext.putImageData(imgData, 0, 0);\n                \n          incLoaded.call(this);\n        };\n        var incLoaded = function() {\n          if (this.width > 0) {\n            if (fallbackImgSize === undefined)\n            {fallbackImgSize = this.width;}\n            if (fallbackImgSize != this.width)\n            {console.log('Fallback faces have inconsistent widths: ' + fallbackImgSize + ' vs. ' + this.width);}\n          } else\n          {faceMissing = true;}\n          loaded++;\n          if (loaded == 6) {\n            fallbackImgSize = this.width;\n            container.appendChild(world);\n            callback();\n          }\n        };\n        faceMissing = false;\n        for (s = 0; s < 6; s++) {\n          var faceImg = new Image();\n          faceImg.crossOrigin = globalParams.crossOrigin ? globalParams.crossOrigin : 'anonymous';\n          faceImg.side = s;\n          faceImg.onload = onLoad;\n          faceImg.onerror = incLoaded; // ignore missing face to support partial fallback image\n          if (imageType == 'multires') {\n            faceImg.src = encodeURI(path.replace('%s', sides[s]) + '.' + image.extension);\n          } else {\n            faceImg.src = encodeURI(image[s].src);\n          }\n        }\n        fillMissingFaces(fallbackImgSize);\n        return;\n      } else if (!gl) {\n        console.log('Error: no WebGL support detected!');\n        throw { type: 'no webgl' };\n      }\n      if (imageType == 'cubemap')\n      {fillMissingFaces(cubeImgWidth);}\n      if (image.basePath) {\n        image.fullpath = image.basePath + image.path;\n      } else {\n        image.fullpath = image.path;\n      }\n      image.invTileResolution = 1 / image.tileResolution;\n        \n      var vertices = createCube();\n      vtmps = [];\n      for (s = 0; s < 6; s++) {\n        vtmps[s] = vertices.slice(s * 12, s * 12 + 12);\n        vertices = createCube();\n      }\n        \n      // Make sure image isn't too big\n      var width = 0, maxWidth = 0;\n      if (imageType == 'equirectangular') {\n        width = Math.max(image.width, image.height);\n        maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      } else if (imageType == 'cubemap') {\n        width = cubeImgWidth;\n        maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      }\n      if (width > maxWidth) {\n        console.log('Error: The image is too big; it\\'s ' + width + 'px wide, '+\n                        'but this device\\'s maximum supported size is ' + maxWidth + 'px.');\n        throw { type: 'webgl size error', width: width, maxWidth: maxWidth };\n      }\n\n      // Store horizon pitch and roll if applicable\n      if (params !== undefined && (params.horizonPitch !== undefined || params.horizonRoll !== undefined))\n      {pose = [params.horizonPitch == undefined ? 0 : params.horizonPitch,\n        params.horizonRoll == undefined ? 0 : params.horizonRoll];}\n\n      // Set 2d texture binding\n      var glBindType = gl.TEXTURE_2D;\n\n      // Create viewport for entire canvas\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n      // Create vertex shader\n      vs = gl.createShader(gl.VERTEX_SHADER);\n      var vertexSrc = v;\n      if (imageType == 'multires') {\n        vertexSrc = vMulti;\n      }\n      gl.shaderSource(vs, vertexSrc);\n      gl.compileShader(vs);\n\n      // Create fragment shader\n      fs = gl.createShader(gl.FRAGMENT_SHADER);\n      var fragmentSrc = fragEquirectangular;\n      if (imageType == 'cubemap') {\n        glBindType = gl.TEXTURE_CUBE_MAP;\n        fragmentSrc = fragCube;\n      } else if (imageType == 'multires') {\n        fragmentSrc = fragMulti;\n      }\n      gl.shaderSource(fs, fragmentSrc);\n      gl.compileShader(fs);\n\n      // Link WebGL program\n      program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program);\n\n      // Log errors\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(vs));}\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(fs));}\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n      {console.log(gl.getProgramInfoLog(program));}\n\n      // Use WebGL program\n      gl.useProgram(program);\n\n      program.drawInProgress = false;\n\n      // Set background clear color (does not apply to cubemap/fallback image)\n      var color = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n      gl.clearColor(color[0], color[1], color[2], 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      // Look up texture coordinates location\n      program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n      gl.enableVertexAttribArray(program.texCoordLocation);\n\n      if (imageType != 'multires') {\n        // Provide texture coordinates for rectangle\n        if (!texCoordBuffer)\n        {texCoordBuffer = gl.createBuffer();}\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n        // Pass aspect ratio\n        program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n        gl.uniform1f(program.aspectRatio, gl.drawingBufferWidth / gl.drawingBufferHeight);\n\n        // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n        program.psi = gl.getUniformLocation(program, 'u_psi');\n        program.theta = gl.getUniformLocation(program, 'u_theta');\n        program.f = gl.getUniformLocation(program, 'u_f');\n        program.h = gl.getUniformLocation(program, 'u_h');\n        program.v = gl.getUniformLocation(program, 'u_v');\n        program.vo = gl.getUniformLocation(program, 'u_vo');\n        program.rot = gl.getUniformLocation(program, 'u_rot');\n\n        // Pass horizontal extent, vertical extent, and vertical offset\n        gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n        gl.uniform1f(program.v, vaov / Math.PI);\n        gl.uniform1f(program.vo, voffset / Math.PI * 2);\n\n        // Set background color\n        if (imageType == 'equirectangular') {\n          program.backgroundColor = gl.getUniformLocation(program, 'u_backgroundColor');\n          gl.uniform4fv(program.backgroundColor, color.concat([1]));\n        }\n\n        // Create texture\n        program.texture = gl.createTexture();\n        gl.bindTexture(glBindType, program.texture);\n\n        // Upload images to texture depending on type\n        if (imageType == 'cubemap') {\n          // Load all six sides of the cube map\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[1]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[3]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[4]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[5]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[0]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[2]);\n        } else {\n          // Upload image to the texture\n          gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n        }\n\n        // Set parameters for rendering any size\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n      } else {\n        // Look up vertex coordinates location\n        program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n        gl.enableVertexAttribArray(program.vertPosLocation);\n\n        // Create buffers\n        if (!cubeVertBuf)\n        {cubeVertBuf = gl.createBuffer();}\n        if (!cubeVertTexCoordBuf)\n        {cubeVertTexCoordBuf = gl.createBuffer();}\n        if (!cubeVertIndBuf)\n        {cubeVertIndBuf = gl.createBuffer();}\n\n        // Bind texture coordinate buffer and pass coordinates to WebGL\n        gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0,0,1,0,1,1,0,1]), gl.STATIC_DRAW);\n\n        // Bind square index buffer and pass indicies to WebGL\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVertIndBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0,1,2,0,2,3]), gl.STATIC_DRAW);\n\n        // Find uniforms\n        program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n        program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix');\n        //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n\n        program.level = -1;\n\n        program.currentNodes = [];\n        program.nodeCache = [];\n        program.nodeCacheTimestamp = 0;\n      }\n\n      // Check if there was an error\n      var err = gl.getError();\n      if (err !== 0) {\n        console.log('Error: Something went wrong with WebGL!', err);\n        throw { type: 'webgl error' };\n      }\n\n      callback();\n    };\n\n    /**\n     * Destroy renderer.\n     * @memberof Renderer\n     * @instance\n     */\n    this.destroy = function() {\n      if (container !== undefined) {\n        if (canvas !== undefined && container.contains(canvas)) {\n          container.removeChild(canvas);\n        }\n        if (world !== undefined && container.contains(world)) {\n          container.removeChild(world);\n        }\n      }\n      if (gl) {\n        // The spec says this is only supposed to simulate losing the WebGL\n        // context, but in practice it tends to actually free the memory.\n        var extension = gl.getExtension('WEBGL_lose_context');\n        if (extension)\n        {extension.loseContext();}\n      }\n    };\n\n    /**\n     * Resize renderer (call after resizing container).\n     * @memberof Renderer\n     * @instance\n     */\n    this.resize = function() {\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.width = canvas.clientWidth * pixelRatio;\n      canvas.height = canvas.clientHeight * pixelRatio;\n      if (gl) {\n        if (gl.getError() == 1286)\n        {handleWebGLError1286();}\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (imageType != 'multires') {\n          gl.uniform1f(program.aspectRatio, canvas.clientWidth / canvas.clientHeight);\n        }\n      }\n    };\n    // Initialize canvas size\n    this.resize();\n\n    /**\n     * Set renderer horizon pitch and roll.\n     * @memberof Renderer\n     * @instance\n     */\n    this.setPose = function(horizonPitch, horizonRoll) {\n      pose = [horizonPitch, horizonRoll];\n    };\n\n    /**\n     * Render new view of panorama.\n     * @memberof Renderer\n     * @instance\n     * @param {number} pitch - Pitch to render at (in radians).\n     * @param {number} yaw - Yaw to render at (in radians).\n     * @param {number} hfov - Horizontal field of view to render with (in radians).\n     * @param {Object} [params] - Extra configuration parameters. \n     * @param {number} [params.roll] - Camera roll (in radians).\n     * @param {boolean} [params.returnImage] - Return rendered image?\n     */\n    this.render = function(pitch, yaw, hfov, params) {\n      var focal, i, s, roll = 0;\n      if (params === undefined)\n      {params = {};}\n      if (params.roll)\n      {roll = params.roll;}\n\n      // Apply pitch and roll transformation if applicable\n      if (pose !== undefined) {\n        var horizonPitch = pose[0],\n          horizonRoll = pose[1];\n\n        // Calculate new pitch and yaw\n        var orig_pitch = pitch,\n          orig_yaw = yaw,\n          x = Math.cos(horizonRoll) * Math.sin(pitch) * Math.sin(horizonPitch) +\n                    Math.cos(pitch) * (Math.cos(horizonPitch) * Math.cos(yaw) +\n                    Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.sin(yaw)),\n          y = -Math.sin(pitch) * Math.sin(horizonRoll) +\n                    Math.cos(pitch) * Math.cos(horizonRoll) * Math.sin(yaw),\n          z = Math.cos(horizonRoll) * Math.cos(horizonPitch) * Math.sin(pitch) +\n                    Math.cos(pitch) * (-Math.cos(yaw) * Math.sin(horizonPitch) +\n                    Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.sin(yaw));\n        pitch = Math.asin(Math.max(Math.min(z, 1), -1));\n        yaw = Math.atan2(y, x);\n\n        // Calculate roll\n        var v = [Math.cos(orig_pitch) * (Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.cos(orig_yaw) -\n                    Math.cos(horizonPitch) * Math.sin(orig_yaw)),\n          Math.cos(orig_pitch) * Math.cos(horizonRoll) * Math.cos(orig_yaw),\n          Math.cos(orig_pitch) * (Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.cos(orig_yaw) +\n                    Math.sin(orig_yaw) * Math.sin(horizonPitch))],\n          w = [-Math.cos(pitch) * Math.sin(yaw), Math.cos(pitch) * Math.cos(yaw)];\n        var roll_adj = Math.acos(Math.max(Math.min((v[0]*w[0] + v[1]*w[1]) /\n                (Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]) *\n                Math.sqrt(w[0]*w[0]+w[1]*w[1])), 1), -1));\n        if (v[2] < 0)\n        {roll_adj = 2 * Math.PI - roll_adj;}\n        roll += roll_adj;\n      }\n\n      // If no WebGL\n      if (!gl && (imageType == 'multires' || imageType == 'cubemap')) {\n        // Determine face transforms\n        s = fallbackImgSize / 2;\n            \n        var transforms = {\n          f: 'translate3d(-' + (s + 2) + 'px, -' + (s + 2) + 'px, -' + s + 'px)',\n          b: 'translate3d(' + (s + 2) + 'px, -' + (s + 2) + 'px, ' + s + 'px) rotateX(180deg) rotateZ(180deg)',\n          u: 'translate3d(-' + (s + 2) + 'px, -' + s + 'px, ' + (s + 2) + 'px) rotateX(270deg)',\n          d: 'translate3d(-' + (s + 2) + 'px, ' + s + 'px, -' + (s + 2) + 'px) rotateX(90deg)',\n          l: 'translate3d(-' + s + 'px, -' + (s + 2) + 'px, ' + (s + 2) + 'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',\n          r: 'translate3d(' + s + 'px, -' + (s + 2) + 'px, -' + (s + 2) + 'px) rotateY(270deg)'\n        };\n        focal = 1 / Math.tan(hfov / 2);\n        var zoom = focal * canvas.clientWidth / 2 + 'px';\n        var transform = 'perspective(' + zoom + ') translateZ(' + zoom + ') rotateX(' + pitch + 'rad) rotateY(' + yaw + 'rad) ';\n            \n        // Apply face transforms\n        var faces = Object.keys(transforms);\n        for (i = 0; i < 6; i++) {\n          var face = world.querySelector('.pnlm-' + faces[i] + 'face');\n          if (!face)\n          {continue;} // ignore missing face to support partial cubemap/fallback image\n          face.style.webkitTransform = transform + transforms[faces[i]];\n          face.style.transform = transform + transforms[faces[i]];\n        }\n        return;\n      }\n        \n      if (imageType != 'multires') {\n        // Calculate focal length from vertical field of view\n        var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (gl.drawingBufferWidth / gl.drawingBufferHeight));\n        focal = 1 / Math.tan(vfov * 0.5);\n\n        // Pass psi, theta, roll, and focal length\n        gl.uniform1f(program.psi, yaw);\n        gl.uniform1f(program.theta, pitch);\n        gl.uniform1f(program.rot, roll);\n        gl.uniform1f(program.f, focal);\n            \n        if (dynamic === true) {\n          // Update texture if dynamic\n          if (imageType == 'equirectangular') {\n            gl.bindTexture(gl.TEXTURE_2D, program.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n          }\n        }\n            \n        // Draw using current buffer\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        \n      } else {\n        // Create perspective matrix\n        var perspMatrix = makePersp(hfov, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 100.0);\n            \n        // Find correct zoom level\n        checkZoom(hfov);\n            \n        // Create rotation matrix\n        var matrix = identityMatrix3();\n        matrix = rotateMatrix(matrix, -roll, 'z');\n        matrix = rotateMatrix(matrix, -pitch, 'x');\n        matrix = rotateMatrix(matrix, yaw, 'y');\n        matrix = makeMatrix4(matrix);\n            \n        // Set matrix uniforms\n        gl.uniformMatrix4fv(program.perspUniform, false, new Float32Array(transposeMatrix4(perspMatrix)));\n        gl.uniformMatrix4fv(program.cubeUniform, false, new Float32Array(transposeMatrix4(matrix)));\n            \n        // Find current nodes\n        var rotPersp = rotatePersp(perspMatrix, matrix);\n        program.nodeCache.sort(multiresNodeSort);\n        if (program.nodeCache.length > 200 &&\n                program.nodeCache.length > program.currentNodes.length + 50) {\n          // Remove older nodes from cache\n          var removed = program.nodeCache.splice(200, program.nodeCache.length - 200);\n          for (var i = 0; i < removed.length; i++) {\n            // Explicitly delete textures\n            gl.deleteTexture(removed[i].texture);\n          }\n        }\n        program.currentNodes = [];\n            \n        var sides = ['f', 'b', 'u', 'd', 'l', 'r'];\n        for (s = 0; s < 6; s++) {\n          var ntmp = new MultiresNode(vtmps[s], sides[s], 1, 0, 0, image.fullpath);\n          testMultiresNode(rotPersp, ntmp, pitch, yaw, hfov);\n        }\n            \n        program.currentNodes.sort(multiresNodeRenderSort);\n            \n        // Unqueue any pending requests for nodes that are no longer visible\n        for (i = pendingTextureRequests.length - 1; i >= 0; i--) {\n          if (program.currentNodes.indexOf(pendingTextureRequests[i].node) === -1) {\n            pendingTextureRequests[i].node.textureLoad = false;\n            pendingTextureRequests.splice(i, 1);\n          }\n        }\n            \n        // Allow one request to be pending, so that we can create a texture buffer for that in advance of loading actually beginning\n        if (pendingTextureRequests.length === 0) {\n          for (i = 0; i < program.currentNodes.length; i++) {\n            var node = program.currentNodes[i];\n            if (!node.texture && !node.textureLoad) {\n              node.textureLoad = true;\n            \n              setTimeout(processNextTile, 0, node);\n                        \n              // Only process one tile per frame to improve responsiveness\n              break;\n            }\n          }\n        }\n            \n        // Draw tiles\n        multiresDraw();\n      }\n        \n      if (params.returnImage !== undefined) {\n        return canvas.toDataURL('image/png');\n      }\n    };\n    \n    /**\n     * Check if images are loading.\n     * @memberof Renderer\n     * @instance\n     * @returns {boolean} Whether or not images are loading.\n     */\n    this.isLoading = function() {\n      if (gl && imageType == 'multires') {\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (!program.currentNodes[i].textureLoaded) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    \n    /**\n     * Retrieve renderer's canvas.\n     * @memberof Renderer\n     * @instance\n     * @returns {HTMLElement} Renderer's canvas.\n     */\n    this.getCanvas = function() {\n      return canvas;\n    };\n    \n    /**\n     * Sorting method for multires nodes.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Base tiles first, then higher timestamp first.\n     */\n    function multiresNodeSort(a, b) {\n      // Base tiles are always first\n      if (a.level == 1 && b.level != 1) {\n        return -1;\n      }\n      if (b.level == 1 && a.level != 1) {\n        return 1;\n      }\n        \n      // Higher timestamp first\n      return b.timestamp - a.timestamp;\n    }\n    \n    /**\n     * Sorting method for multires node rendering.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Lower zoom levels first, then closest to center first.\n     */\n    function multiresNodeRenderSort(a, b) {\n      // Lower zoom levels first\n      if (a.level != b.level) {\n        return a.level - b.level;\n      }\n        \n      // Lower distance from center first\n      return a.diff - b.diff;\n    }\n    \n    /**\n     * Draws multires nodes.\n     * @private\n     */\n    function multiresDraw() {\n      if (!program.drawInProgress) {\n        program.drawInProgress = true;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (program.currentNodes[i].textureLoaded > 1) {\n            //var color = program.currentNodes[i].color;\n            //gl.uniform4f(program.colorUniform, color[0], color[1], color[2], 1.0);\n                    \n            // Bind vertex buffer and pass vertices to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(program.currentNodes[i].vertices), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.vertPosLocation, 3, gl.FLOAT, false, 0, 0);\n                    \n            // Prep for texture\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n                    \n            // Bind texture and draw tile\n            gl.bindTexture(gl.TEXTURE_2D, program.currentNodes[i].texture); // Bind program.currentNodes[i].texture to TEXTURE0\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n        program.drawInProgress = false;\n      }\n    }\n\n    /**\n     * Creates new multires node.\n     * @constructor\n     * @private\n     * @param {number[]} vertices - Node's verticies.\n     * @param {string} side - Node's cube face.\n     * @param {number} level - Node's zoom level.\n     * @param {number} x - Node's x position.\n     * @param {number} y - Node's y position.\n     * @param {string} path - Node's path.\n     */\n    function MultiresNode(vertices, side, level, x, y, path) {\n      this.vertices = vertices;\n      this.side = side;\n      this.level = level;\n      this.x = x;\n      this.y = y;\n      this.path = path.replace('%s',side).replace('%l',level).replace('%x',x).replace('%y',y);\n    }\n\n    /**\n     * Test if multires node is visible. If it is, add it to current nodes,\n     * load its texture, and load appropriate child nodes.\n     * @private\n     * @param {number[]} rotPersp - Rotated perspective matrix.\n     * @param {MultiresNode} node - Multires node to check.\n     * @param {number} pitch - Pitch to check at.\n     * @param {number} yaw - Yaw to check at.\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function testMultiresNode(rotPersp, node, pitch, yaw, hfov) {\n      if (checkSquareInView(rotPersp, node.vertices)) {\n        // Calculate central angle between center of view and center of tile\n        var v = node.vertices;\n        var x = v[0] + v[3] + v[6] + v[ 9];\n        var y = v[1] + v[4] + v[7] + v[10];\n        var z = v[2] + v[5] + v[8] + v[11];\n        var r = Math.sqrt(x*x + y*y + z*z);\n        var theta = Math.asin(z / r);\n        var phi = Math.atan2(y, x);\n        var ydiff = phi - yaw;\n        ydiff += (ydiff > Math.PI) ? -2 * Math.PI : (ydiff < -Math.PI) ? 2 * Math.PI : 0;\n        ydiff = Math.abs(ydiff);\n        node.diff = Math.acos(Math.sin(pitch) * Math.sin(theta) + Math.cos(pitch) * Math.cos(theta) * Math.cos(ydiff));\n            \n        // Add node to current nodes and load texture if needed\n        var inCurrent = false;\n        for (var k = 0; k < program.nodeCache.length; k++) {\n          if (program.nodeCache[k].path == node.path) {\n            inCurrent = true;\n            program.nodeCache[k].timestamp = program.nodeCacheTimestamp++;\n            program.nodeCache[k].diff = node.diff;\n            program.currentNodes.push(program.nodeCache[k]);\n            break;\n          }\n        }\n        if (!inCurrent) {\n          //node.color = [Math.random(), Math.random(), Math.random()];\n          node.timestamp = program.nodeCacheTimestamp++;\n          program.currentNodes.push(node);\n          program.nodeCache.push(node);\n        }\n            \n        // TODO: Test error\n        // Create child nodes\n        if (node.level < program.level) {\n          var cubeSize = image.cubeResolution * Math.pow(2, node.level - image.maxLevel);\n          var numTiles = Math.ceil(cubeSize * image.invTileResolution) - 1;\n          var doubleTileSize = cubeSize % image.tileResolution * 2;\n          var lastTileSize = (cubeSize * 2) % image.tileResolution;\n          if (lastTileSize === 0) {\n            lastTileSize = image.tileResolution;\n          }\n          if (doubleTileSize === 0) {\n            doubleTileSize = image.tileResolution * 2;\n          }\n          var f = 0.5;\n          if (node.x == numTiles || node.y == numTiles) {\n            f = 1.0 - image.tileResolution / (image.tileResolution + lastTileSize);\n          }\n          var i = 1.0 - f;\n          var children = [];\n          var vtmp, ntmp;\n          var f1 = f, f2 = f, f3 = f, i1 = i, i2 = i, i3 = i;\n          // Handle non-symmetric tiles\n          if (lastTileSize < image.tileResolution) {\n            if (node.x == numTiles && node.y != numTiles) {\n              f2 = 0.5;\n              i2 = 0.5;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            } else if (node.x != numTiles && node.y == numTiles) {\n              f1 = 0.5;\n              i1 = 0.5;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            }\n          }\n          // Handle small tiles that have fewer than four children\n          if (doubleTileSize <= image.tileResolution) {\n            if (node.x == numTiles) {\n              f1 = 0;\n              i1 = 1;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n            if (node.y == numTiles) {\n              f2 = 0;\n              i2 = 1;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n          }\n                \n          vtmp = [           v[0],             v[1],             v[2],\n            v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n            v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n            v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3\n          ];\n          ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2, image.fullpath);\n          children.push(ntmp);\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n              v[3],             v[4],             v[5],\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution) &&\n                    !(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[6],             v[7],             v[8],\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [  v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3,\n              v[9],            v[10],            v[11]\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          for (var j = 0; j < children.length; j++) {\n            testMultiresNode(rotPersp, children[j], pitch, yaw, hfov);\n          }\n        }\n      }\n    }\n    \n    /**\n     * Creates cube vertex array.\n     * @private\n     * @returns {number[]} Cube vertex array.\n     */\n    function createCube() {\n      return [-1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, // Front face\n        1,  1,  1, -1,  1,  1, -1, -1,  1,  1, -1,  1, // Back face\n        -1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1, -1, // Up face\n        -1, -1, -1,  1, -1, -1,  1, -1,  1, -1, -1,  1, // Down face\n        -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1,  1, // Left face\n        1,  1, -1,  1,  1,  1,  1, -1,  1,  1, -1, -1  // Right face\n      ];\n    }\n    \n    /**\n     * Creates 3x3 identity matrix.\n     * @private\n     * @returns {number[]} Identity matrix.\n     */\n    function identityMatrix3() {\n      return [\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ];\n    }\n    \n    /**\n     * Rotates a 3x3 matrix.\n     * @private\n     * @param {number[]} m - Matrix to rotate.\n     * @param {number[]} angle - Angle to rotate by in radians.\n     * @param {string} axis - Axis to rotate about (`x`, `y`, or `z`).\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotateMatrix(m, angle, axis) {\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      if (axis == 'x') {\n        return [\n          m[0], c*m[1] + s*m[2], c*m[2] - s*m[1],\n          m[3], c*m[4] + s*m[5], c*m[5] - s*m[4],\n          m[6], c*m[7] + s*m[8], c*m[8] - s*m[7]\n        ];\n      }\n      if (axis == 'y') {\n        return [\n          c*m[0] - s*m[2], m[1], c*m[2] + s*m[0],\n          c*m[3] - s*m[5], m[4], c*m[5] + s*m[3],\n          c*m[6] - s*m[8], m[7], c*m[8] + s*m[6]\n        ];\n      }\n      if (axis == 'z') {\n        return [\n          c*m[0] + s*m[1], c*m[1] - s*m[0], m[2],\n          c*m[3] + s*m[4], c*m[4] - s*m[3], m[5],\n          c*m[6] + s*m[7], c*m[7] - s*m[6], m[8]\n        ];\n      }\n    }\n    \n    /**\n     * Turns a 3x3 matrix into a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Expanded matrix.\n     */\n    function makeMatrix4(m) {\n      return [\n        m[0], m[1], m[2],    0,\n        m[3], m[4], m[5],    0,\n        m[6], m[7], m[8],    0,\n        0,    0,    0,    1\n      ];\n    }\n    \n    /**\n     * Transposes a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Transposed matrix.\n     */\n    function transposeMatrix4(m) {\n      return [\n        m[ 0], m[ 4], m[ 8], m[12],\n        m[ 1], m[ 5], m[ 9], m[13],\n        m[ 2], m[ 6], m[10], m[14],\n        m[ 3], m[ 7], m[11], m[15]\n      ];\n    }\n    \n    /**\n     * Creates a perspective matrix.\n     * @private\n     * @param {number} hfov - Desired horizontal field of view.\n     * @param {number} aspect - Desired aspect ratio.\n     * @param {number} znear - Near distance.\n     * @param {number} zfar - Far distance.\n     * @returns {number[]} Generated perspective matrix.\n     */\n    function makePersp(hfov, aspect, znear, zfar) {\n      var fovy = 2 * Math.atan(Math.tan(hfov/2) * gl.drawingBufferHeight / gl.drawingBufferWidth);\n      var f = 1 / Math.tan(fovy/2);\n      return [\n        f/aspect,   0,  0,  0,\n        0,   f,  0,  0,\n        0,   0,  (zfar+znear)/(znear-zfar), (2*zfar*znear)/(znear-zfar),\n        0,   0, -1,  0\n      ];\n    }\n    \n    /**\n     * Processes a loaded texture image into a WebGL texture.\n     * @private\n     * @param {Image} img - Input image.\n     * @param {WebGLTexture} tex - Texture to bind image to.\n     */\n    function processLoadedTexture(img, tex) {\n      gl.bindTexture(gl.TEXTURE_2D, tex);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    \n    var pendingTextureRequests = [];\n\n    // Based on http://blog.tojicode.com/2012/03/javascript-memory-optimization-and.html\n    var loadTexture = (function() {\n      var cacheTop = 4;   // Maximum number of concurrents loads\n      var textureImageCache = {};\n      var crossOrigin;\n\n      function TextureImageLoader() {\n        var self = this;\n        this.texture = this.callback = null;\n        this.image = new Image();\n        this.image.crossOrigin = crossOrigin ? crossOrigin : 'anonymous';\n        var loadFn = (function() {\n          if (self.image.width > 0 && self.image.height > 0) { // ignore missing tile to supporting partial image\n            processLoadedTexture(self.image, self.texture);\n            self.callback(self.texture, true);\n          } else {\n            self.callback(self.texture, false);\n          }\n          releaseTextureImageLoader(self);\n        });\n        this.image.addEventListener('load', loadFn);\n        this.image.addEventListener('error', loadFn); // ignore missing tile file to support partial image, otherwise retry loop causes high CPU load\n      };\n\n      TextureImageLoader.prototype.loadTexture = function(src, texture, callback) {\n        this.texture = texture;\n        this.callback = callback;\n        this.image.src = src;\n      };\n\n      function PendingTextureRequest(node, src, texture, callback) {\n        this.node = node;\n        this.src = src;\n        this.texture = texture;\n        this.callback = callback;\n      };\n\n      function releaseTextureImageLoader(til) {\n        if (pendingTextureRequests.length) {\n          var req = pendingTextureRequests.shift();\n          til.loadTexture(req.src, req.texture, req.callback);\n        } else\n        {textureImageCache[cacheTop++] = til;}\n      }\n\n      for (var i = 0; i < cacheTop; i++)\n      {textureImageCache[i] = new TextureImageLoader();}\n\n      return function(node, src, callback, _crossOrigin) {\n        crossOrigin = _crossOrigin;\n        var texture = gl.createTexture();\n        if (cacheTop)\n        {textureImageCache[--cacheTop].loadTexture(src, texture, callback);}\n        else\n        {pendingTextureRequests.push(new PendingTextureRequest(node, src, texture, callback));}\n        return texture;\n      };\n    })();\n\n    /**\n     * Loads image and creates texture for a multires node / tile.\n     * @private\n     * @param {MultiresNode} node - Input node.\n     */\n    function processNextTile(node) {\n      loadTexture(node, encodeURI(node.path + '.' + image.extension), function(texture, loaded) {\n        node.texture = texture;\n        node.textureLoaded = loaded ? 2 : 1;\n      }, globalParams.crossOrigin);\n    }\n    \n    /**\n     * Finds and applies optimal multires zoom level.\n     * @private\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function checkZoom(hfov) {\n      // Find optimal level\n      var newLevel = 1;\n      while ( newLevel < image.maxLevel &&\n            gl.drawingBufferWidth > image.tileResolution *\n            Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707 ) {\n        newLevel++;\n      }\n        \n      // Apply change\n      program.level = newLevel;\n    }\n    \n    /**\n     * Rotates perspective matrix.\n     * @private\n     * @param {number[]} p - Perspective matrix.\n     * @param {number[]} r - Rotation matrix.\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotatePersp(p, r) {\n      return [\n        p[ 0]*r[0], p[ 0]*r[1], p[ 0]*r[ 2],     0,\n        p[ 5]*r[4], p[ 5]*r[5], p[ 5]*r[ 6],     0,\n        p[10]*r[8], p[10]*r[9], p[10]*r[10], p[11],\n        -r[8],      -r[9],      -r[10],     0\n      ];\n    }\n    \n    /**\n     * Applies rotated perspective matrix to a 3-vector\n     * (last element is inverted).\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input 3-vector.\n     * @returns {number[]} Resulting 4-vector.\n     */\n    function applyRotPerspToVec(m, v) {\n      return [\n        m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2],\n        m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2],\n        m[11] + m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2],\n        1/(m[12]*v[0] + m[13]*v[1] + m[14]*v[2])\n      ];\n    }\n    \n    /**\n     * Checks if a vertex is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input vertex.\n     * @returns {number} 1 or -1 if the vertex is or is not visible,\n     *      respectively.\n     */\n    function checkInView(m, v) {\n      var vpp = applyRotPerspToVec(m, v);\n      var winX = vpp[0]*vpp[3];\n      var winY = vpp[1]*vpp[3];\n      var winZ = vpp[2]*vpp[3];\n      var ret = [0, 0, 0];\n        \n      if ( winX < -1 )\n      {ret[0] = -1;}\n      if ( winX > 1 )\n      {ret[0] = 1;}\n      if ( winY < -1 )\n      {ret[1] = -1;}\n      if ( winY > 1 )\n      {ret[1] = 1;}\n      if ( winZ < -1 || winZ > 1 )\n      {ret[2] = 1;}\n      return ret;\n    }\n    \n    /**\n     * Checks if a square (tile) is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Square's vertex array.\n     * @returns {boolean} Whether or not the square is visible.\n     */\n    function checkSquareInView(m, v) {\n      var check1 = checkInView(m, v.slice(0, 3));\n      var check2 = checkInView(m, v.slice(3, 6));\n      var check3 = checkInView(m, v.slice(6, 9));\n      var check4 = checkInView(m, v.slice(9, 12));\n      var testX = check1[0] + check2[0] + check3[0] + check4[0];\n      if ( testX == -4 || testX == 4 )\n      {return false;}\n      var testY = check1[1] + check2[1] + check3[1] + check4[1];\n      if ( testY == -4 || testY == 4 )\n      {return false;}\n      var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n      return testZ != 4;\n        \n\n    }\n\n    /**\n     * On iOS (iPhone 5c, iOS 10.3), this WebGL error occurs when the canvas is\n     * too big. Unfortuately, there's no way to test for this beforehand, so we\n     * reduce the canvas size if this error is thrown.\n     * @private\n     */\n    function handleWebGLError1286() {\n      console.log('Reducing canvas size due to error 1286!');\n      canvas.width = Math.round(canvas.width / 2);\n      canvas.height = Math.round(canvas.height / 2);\n    }\n  }\n\n  // Vertex shader for equirectangular and cube\n  var v = [\n    'attribute vec2 a_texCoord;',\n    'varying vec2 v_texCoord;',\n\n    'void main() {',\n    // Set position\n    'gl_Position = vec4(a_texCoord, 0.0, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Vertex shader for multires\n  var vMulti = [\n    'attribute vec3 a_vertCoord;',\n    'attribute vec2 a_texCoord;',\n\n    'uniform mat4 u_cubeMatrix;',\n    'uniform mat4 u_perspMatrix;',\n\n    'varying mediump vec2 v_texCoord;',\n\n    'void main(void) {',\n    // Set position\n    'gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Fragment shader\n  var fragEquiCubeBase = [\n    'precision mediump float;',\n\n    'uniform float u_aspectRatio;',\n    'uniform float u_psi;',\n    'uniform float u_theta;',\n    'uniform float u_f;',\n    'uniform float u_h;',\n    'uniform float u_v;',\n    'uniform float u_vo;',\n    'uniform float u_rot;',\n\n    'const float PI = 3.14159265358979323846264;',\n\n    // Texture\n    'uniform sampler2D u_image;',\n    'uniform samplerCube u_imageCube;',\n\n    // Coordinates passed in from vertex shader\n    'varying vec2 v_texCoord;',\n\n    // Background color (display for partial panoramas)\n    'uniform vec4 u_backgroundColor;',\n\n    'void main() {',\n    // Map canvas/camera to sphere\n    'float x = v_texCoord.x * u_aspectRatio;',\n    'float y = v_texCoord.y;',\n    'float sinrot = sin(u_rot);',\n    'float cosrot = cos(u_rot);',\n    'float rot_x = x * cosrot - y * sinrot;',\n    'float rot_y = x * sinrot + y * cosrot;',\n    'float sintheta = sin(u_theta);',\n    'float costheta = cos(u_theta);',\n    'float a = u_f * costheta - rot_y * sintheta;',\n    'float root = sqrt(rot_x * rot_x + a * a);',\n    'float lambda = atan(rot_x / root, a / root) + u_psi;',\n    'float phi = atan((rot_y * costheta + u_f * sintheta) / root);',\n  ].join('\\n');\n\n  // Fragment shader\n  var fragCube = fragEquiCubeBase + [\n    // Look up color from texture\n    'float cosphi = cos(phi);',\n    'gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragEquirectangular = fragEquiCubeBase + [\n    // Wrap image\n    'lambda = mod(lambda + PI, PI * 2.0) - PI;',\n\n    // Map texture to sphere\n    'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));',\n\n    // Look up color from texture\n    // Map from [-1,1] to [0,1] and flip y-axis\n    'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)',\n    'gl_FragColor = u_backgroundColor;',\n    'else',\n    'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragMulti = [\n    'varying mediump vec2 v_texCoord;',\n    'uniform sampler2D u_sampler;',\n    //'uniform mediump vec4 u_color;',\n\n    'void main(void) {',\n    // Look up color from texture\n    'gl_FragColor = texture2D(u_sampler, v_texCoord);',\n    //    'gl_FragColor = u_color;',\n    '}'\n  ].join('');\n\n  return {\n    renderer: function(container, image, imagetype, dynamic) {\n      return new Renderer(container, image, imagetype, dynamic);\n    }\n  };\n\n})(window, document);\n","/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.pannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama viewer.\n * @constructor\n * @param {HTMLElement|string} container - The container (div) element for the\n *      viewer, or its ID.\n * @param {Object} initialConfig - Inital configuration for viewer.\n */\n  function Viewer(container, initialConfig) {\n\n    var _this = this;\n\n    // Declare variables\n    var config,\n      renderer,\n      preview,\n      isUserInteracting = false,\n      latestInteraction = Date.now(),\n      onPointerDownPointerX = 0,\n      onPointerDownPointerY = 0,\n      onPointerDownPointerDist = -1,\n      onPointerDownYaw = 0,\n      onPointerDownPitch = 0,\n      keysDown = new Array(10),\n      fullscreenActive = false,\n      loaded,\n      error = false,\n      isTimedOut = false,\n      listenersAdded = false,\n      panoImage,\n      prevTime,\n      speed = { 'yaw': 0, 'pitch': 0, 'hfov': 0 },\n      animating = false,\n      orientation = false,\n      orientationYawOffset = 0,\n      autoRotateStart,\n      autoRotateSpeed = 0,\n      origHfov,\n      origPitch,\n      animatedMove = {},\n      externalEventListeners = {},\n      specifiedPhotoSphereExcludes = [],\n      update = false, // Should we update when still to render dynamic content\n      hotspotsCreated = false;\n\n    var defaultConfig = {\n      hfov: 100,\n      minHfov: 50,\n      maxHfov: 120,\n      pitch: 0,\n      minPitch: undefined,\n      maxPitch: undefined,\n      yaw: 0,\n      minYaw: -180,\n      maxYaw: 180,\n      roll: 0,\n      haov: 360,\n      vaov: 180,\n      vOffset: 0,\n      autoRotate: false,\n      autoRotateInactivityDelay: -1,\n      autoRotateStopDelay: undefined,\n      type: 'equirectangular',\n      northOffset: 0,\n      showFullscreenCtrl: true,\n      dynamic: false,\n      doubleClickZoom: true,\n      keyboardZoom: true,\n      mouseZoom: true,\n      showZoomCtrl: true,\n      autoLoad: false,\n      showControls: true,\n      orientationOnByDefault: false,\n      hotSpotDebug: false,\n      backgroundColor: [0, 0, 0],\n      avoidShowingBackground: false,\n      animationTimingFunction: timingFunction,\n      draggable: true,\n      disableKeyboardCtrl: false,\n      crossOrigin: 'anonymous',\n      touchPanSpeedCoeffFactor: 1,\n      capturedKeyNumbers: [16, 17, 27, 37, 38, 39, 40, 61, 65, 68, 83, 87, 107, 109, 173, 187, 189],\n    };\n\n    // Translatable / configurable strings\n    // Some strings contain '%s', which is a placeholder for inserted values\n    // When setting strings in external configuration, `\\n` should be used instead of `<br>` to insert line breaks\n    defaultConfig.strings = {\n    // Labels\n      loadButtonLabel: 'Click to<br>Load<br>Panorama',\n      loadingLabel: 'Loading...',\n      bylineLabel: 'by %s',    // One substitution: author\n\n      // Errors\n      noPanoramaError: 'No panorama image was specified.',\n      fileAccessError: 'The file %s could not be accessed.',  // One substitution: file URL\n      malformedURLError: 'There is something wrong with the panorama URL.',\n      iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only \" +\n                    \"progressive encoded JPEGs work for your device (this \" +\n                    \"panorama uses standard encoding).\",\n      genericWebGLError: 'Your browser does not have the necessary WebGL support to display this panorama.',\n      textureSizeError: 'This panorama is too big for your device! It\\'s ' +\n                '%spx wide, but your device only supports images up to ' +\n                '%spx wide. Try another device.' +\n                ' (If you\\'re the author, try scaling down the image.)',    // Two substitutions: image width, max image width\n      unknownError: 'Unknown error. Check developer console.',\n    };\n\n    // Initialize container\n    container = typeof container === 'string' ? document.getElementById(container) : container;\n    container.classList.add('pnlm-container');\n    container.tabIndex = 0;\n\n    // Create container for ui\n    var uiContainer = document.createElement('div');\n    uiContainer.className = 'pnlm-ui';\n    container.appendChild(uiContainer);\n\n    // Create container for renderer\n    var renderContainer = document.createElement('div');\n    renderContainer.className = 'pnlm-render-container';\n    container.appendChild(renderContainer);\n    var dragFix = document.createElement('div');\n    dragFix.className = 'pnlm-dragfix';\n    uiContainer.appendChild(dragFix);\n\n    // Display about information on right click\n    var aboutMsg = document.createElement('span');\n    aboutMsg.className = 'pnlm-about-msg';\n    aboutMsg.innerHTML = '<a href=\"https://pannellum.org/\" target=\"_blank\">Pannellum</a>';\n    uiContainer.appendChild(aboutMsg);\n    dragFix.addEventListener('contextmenu', aboutMessage);\n\n    // Create info display\n    var infoDisplay = {};\n\n    // Hot spot debug indicator\n    var hotSpotDebugIndicator = document.createElement('div');\n    hotSpotDebugIndicator.className = 'pnlm-sprite pnlm-hot-spot-debug-indicator';\n    uiContainer.appendChild(hotSpotDebugIndicator);\n\n    // Panorama info\n    infoDisplay.container = document.createElement('div');\n    infoDisplay.container.className = 'pnlm-panorama-info';\n    infoDisplay.title = document.createElement('div');\n    infoDisplay.title.className = 'pnlm-title-box';\n    infoDisplay.container.appendChild(infoDisplay.title);\n    infoDisplay.author = document.createElement('div');\n    infoDisplay.author.className = 'pnlm-author-box';\n    infoDisplay.container.appendChild(infoDisplay.author);\n    uiContainer.appendChild(infoDisplay.container);\n\n    // Load box\n    infoDisplay.load = {};\n    infoDisplay.load.box = document.createElement('div');\n    infoDisplay.load.box.className = 'pnlm-load-box';\n    infoDisplay.load.boxp = document.createElement('p');\n    infoDisplay.load.box.appendChild(infoDisplay.load.boxp);\n    infoDisplay.load.lbox = document.createElement('div');\n    infoDisplay.load.lbox.className = 'pnlm-lbox';\n    infoDisplay.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbox);\n    infoDisplay.load.lbar = document.createElement('div');\n    infoDisplay.load.lbar.className = 'pnlm-lbar';\n    infoDisplay.load.lbarFill = document.createElement('div');\n    infoDisplay.load.lbarFill.className = 'pnlm-lbar-fill';\n    infoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbar);\n    infoDisplay.load.msg = document.createElement('p');\n    infoDisplay.load.msg.className = 'pnlm-lmsg';\n    infoDisplay.load.box.appendChild(infoDisplay.load.msg);\n    uiContainer.appendChild(infoDisplay.load.box);\n\n    // Error message\n    infoDisplay.errorMsg = document.createElement('div');\n    infoDisplay.errorMsg.className = 'pnlm-error-msg pnlm-info-box';\n    uiContainer.appendChild(infoDisplay.errorMsg);\n\n    // Create controls\n    var controls = {};\n    controls.container = document.createElement('div');\n    controls.container.className = 'pnlm-controls-container';\n    uiContainer.appendChild(controls.container);\n\n    // Load button\n    controls.load = document.createElement('div');\n    controls.load.className = 'pnlm-load-button';\n    controls.load.addEventListener('click', function() {\n      processOptions();\n      load();\n    });\n    uiContainer.appendChild(controls.load);\n\n    // Zoom controls\n    controls.zoom = document.createElement('div');\n    controls.zoom.className = 'pnlm-zoom-controls pnlm-controls';\n    controls.zoomIn = document.createElement('div');\n    controls.zoomIn.className = 'pnlm-zoom-in pnlm-sprite pnlm-control';\n    controls.zoomIn.addEventListener('click', zoomIn);\n    controls.zoom.appendChild(controls.zoomIn);\n    controls.zoomOut = document.createElement('div');\n    controls.zoomOut.className = 'pnlm-zoom-out pnlm-sprite pnlm-control';\n    controls.zoomOut.addEventListener('click', zoomOut);\n    controls.zoom.appendChild(controls.zoomOut);\n    controls.container.appendChild(controls.zoom);\n\n    // Fullscreen toggle\n    controls.fullscreen = document.createElement('div');\n    controls.fullscreen.addEventListener('click', toggleFullscreen);\n    controls.fullscreen.className = 'pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control';\n    if (document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled)\n      {controls.container.appendChild(controls.fullscreen);}\n\n    // Device orientation toggle\n    controls.orientation = document.createElement('div');\n    controls.orientation.addEventListener('click', function(e) {\n      if (orientation)\n        {stopOrientation();}\n      else\n        {startOrientation();}\n    });\n    controls.orientation.addEventListener('mousedown', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('touchstart', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('pointerdown', function(e) {e.stopPropagation();});\n    controls.orientation.className = 'pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control';\n    var orientationSupport, startOrientationIfSupported = false;\n    function deviceOrientationTest(e) {\n      window.removeEventListener('deviceorientation', deviceOrientationTest);\n      if (e && e.alpha !== null && e.beta !== null && e.gamma !== null) {\n        controls.container.appendChild(controls.orientation);\n        orientationSupport = true;\n        if (startOrientationIfSupported)\n          {startOrientation();}\n      } else {\n        orientationSupport = false;\n      }\n    }\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener('deviceorientation', deviceOrientationTest);\n    } else {\n      orientationSupport = false;\n    }\n\n    // Compass\n    var compass = document.createElement('div');\n    compass.className = 'pnlm-compass pnlm-controls pnlm-control';\n    uiContainer.appendChild(compass);\n\n    // Load and process configuration\n    if (initialConfig.firstScene) {\n    // Activate first scene if specified in URL\n      mergeConfig(initialConfig.firstScene);\n    } else if (initialConfig.default && initialConfig.default.firstScene) {\n    // Activate first scene if specified in file\n      mergeConfig(initialConfig.default.firstScene);\n    } else {\n      mergeConfig(null);\n    }\n    processOptions(true);\n\n    /**\n * Initializes viewer.\n * @private\n */\n    function init() {\n    // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n    // show an error (older versions don't work at all)\n    // Based on: http://stackoverflow.com/a/10965203\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n      if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n        return;\n      }\n\n      origHfov = config.hfov;\n      origPitch = config.pitch;\n\n      var i, p;\n    \n      if (config.type == 'cubemap') {\n        panoImage = [];\n        for (i = 0; i < 6; i++) {\n          panoImage.push(new Image());\n          panoImage[i].crossOrigin = config.crossOrigin;\n        }\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n      } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes));    // Deep copy\n        // Avoid \"undefined\" in path, check (optional) multiRes.basePath, too\n        // Use only multiRes.basePath if it's an absolute URL\n        if (config.basePath && config.multiRes.basePath &&\n            !(/^(?:[a-z]+:)?\\/\\//i.test(config.multiRes.basePath))) {\n          c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (config.multiRes.basePath) {\n          c.basePath = config.multiRes.basePath;\n        } else if (config.basePath) {\n          c.basePath = config.basePath;\n        }\n        panoImage = c;\n      } else {\n        if (config.dynamic === true) {\n          panoImage = config.panorama;\n        } else {\n          if (config.panorama === undefined) {\n            anError(config.strings.noPanoramaError);\n            return;\n          }\n          panoImage = new Image();\n        }\n      }\n\n      // Configure image loading\n      if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n        \n        var onLoad = function() {\n          itemsToLoad--;\n          if (itemsToLoad === 0) {\n            onImageLoad();\n          }\n        };\n        \n        var onError = function(e) {\n          var a = document.createElement('a');\n          a.href = e.target.src;\n          a.textContent = a.href;\n          anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n        };\n        \n        for (i = 0; i < panoImage.length; i++) {\n          p = config.cubeMap[i];\n          if (p == \"null\") { // support partial cubemap image with explicitly empty faces\n            console.log('Will use background instead of missing cubemap face ' + i);\n            onLoad();\n          } else {\n            if (config.basePath && !absoluteURL(p)) {\n              p = config.basePath + p;\n            }\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            panoImage[i].src = sanitizeURL(p);\n          }\n        }\n      } else if (config.type == 'multires') {\n        onImageLoad();\n      } else {\n        p = '';\n        if (config.basePath) {\n          p = config.basePath;\n        }\n        \n        if (config.dynamic !== true) {\n          // Still image\n          p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n            \n          panoImage.onload = function() {\n            window.URL.revokeObjectURL(this.src);  // Clean up\n            onImageLoad();\n          };\n            \n          var xhr = new XMLHttpRequest();\n          xhr.onloadend = function() {\n            if (xhr.status != 200) {\n              // Display error if image can't be loaded\n              var a = document.createElement('a');\n              a.href = p;\n              a.textContent = a.href;\n              anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n            }\n            var img = this.response;\n            parseGPanoXMP(img);\n            infoDisplay.load.msg.innerHTML = '';\n          };\n          xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n              // Display progress\n              var percent = e.loaded / e.total * 100;\n              infoDisplay.load.lbarFill.style.width = percent + '%';\n              var unit, numerator, denominator;\n              if (e.total > 1e6) {\n                unit = 'MB';\n                numerator = (e.loaded / 1e6).toFixed(2);\n                denominator = (e.total / 1e6).toFixed(2);\n              } else if (e.total > 1e3) {\n                unit = 'kB';\n                numerator = (e.loaded / 1e3).toFixed(1);\n                denominator = (e.total / 1e3).toFixed(1);\n              } else {\n                unit = 'B';\n                numerator = e.loaded;\n                denominator = e.total;\n              }\n              infoDisplay.load.msg.innerHTML = numerator + ' / ' + denominator + ' ' + unit;\n            } else {\n              // Display loading spinner\n              infoDisplay.load.lbox.style.display = 'block';\n              infoDisplay.load.lbar.style.display = 'none';\n            }\n          };\n          try {\n            xhr.open('GET', p, true);\n          } catch (e) {\n            // Malformed URL\n            anError(config.strings.malformedURLError);\n          }\n          xhr.responseType = 'blob';\n          xhr.setRequestHeader('Accept', 'image/*,*/*;q=0.9');\n          xhr.withCredentials = config.crossOrigin === 'use-credentials';\n          xhr.send();\n        }\n      }\n    \n      if (config.draggable)\n        {uiContainer.classList.add('pnlm-grab');}\n      uiContainer.classList.remove('pnlm-grabbing');\n    }\n\n    /**\n * Test if URL is absolute or relative.\n * @private\n * @param {string} url - URL to test\n * @returns {boolean} True if absolute, else false\n */\n    function absoluteURL(url) {\n    // From http://stackoverflow.com/a/19709846\n      return new RegExp('^(?:[a-z]+:)?//', 'i').test(url) || url[0] == '/' || url.slice(0, 5) == 'blob:';\n    };\n\n    /**\n * Create renderer and initialize event listeners once image is loaded.\n * @private\n */\n    function onImageLoad() {\n      if (!renderer)\n        {renderer = new libpannellum.renderer(renderContainer);}\n\n      // Only add event listeners once\n      if (!listenersAdded) {\n        listenersAdded = true;\n        dragFix.addEventListener('mousedown', onDocumentMouseDown, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('mouseup', onDocumentMouseUp, false);\n        if (config.mouseZoom) {\n          uiContainer.addEventListener('mousewheel', onDocumentMouseWheel, false);\n          uiContainer.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        }\n        if (config.doubleClickZoom) {\n          dragFix.addEventListener('dblclick', onDocumentDoubleClick, false);\n        }\n        uiContainer.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('msfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('fullscreenchange', onFullScreenChange, false);\n        window.addEventListener('resize', onDocumentResize, false);\n        window.addEventListener('orientationchange', onDocumentResize, false);\n        if (!config.disableKeyboardCtrl) {\n          container.addEventListener('keydown', onDocumentKeyPress, false);\n          container.addEventListener('keyup', onDocumentKeyUp, false);\n          container.addEventListener('blur', clearKeys, false);\n        }\n        document.addEventListener('mouseleave', onDocumentMouseUp, false);\n        if (document.documentElement.style.pointerAction === '' &&\n            document.documentElement.style.touchAction === '') {\n          dragFix.addEventListener('pointerdown', onDocumentPointerDown, false);\n          dragFix.addEventListener('pointermove', onDocumentPointerMove, false);\n          dragFix.addEventListener('pointerup', onDocumentPointerUp, false);\n          dragFix.addEventListener('pointerleave', onDocumentPointerUp, false);\n        } else {\n          dragFix.addEventListener('touchstart', onDocumentTouchStart, false);\n          dragFix.addEventListener('touchmove', onDocumentTouchMove, false);\n          dragFix.addEventListener('touchend', onDocumentTouchEnd, false);\n        }\n\n        // Deal with MS pointer events\n        if (window.navigator.pointerEnabled)\n          {container.style.touchAction = 'none';}\n      }\n\n      renderInit();\n      setHfov(config.hfov); // possibly adapt hfov after configuration and canvas is complete; prevents empty space on top or bottom by zomming out too much\n      setTimeout(function(){isTimedOut = true;}, 500);\n    }\n\n    /**\n * Parses Google Photo Sphere XMP Metadata.\n * https://developers.google.com/photo-sphere/metadata/\n * @private\n * @param {Image} image - Image to read XMP metadata from.\n */\n    function parseGPanoXMP(image) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function() {\n        var img = reader.result;\n\n        // This awful browser specific test exists because iOS 8 does not work\n        // with non-progressive encoded JPEGs.\n        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n          var flagIndex = img.indexOf('\\xff\\xc2');\n          if (flagIndex < 0 || flagIndex > 65536)\n            {anError(config.strings.iOS8WebGLError);}\n        }\n\n        var start = img.indexOf('<x:xmpmeta');\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n          var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12);\n            \n          // Extract the requested tag from the XMP data\n          var getTag = function(tag) {\n            var result;\n            if (xmpData.indexOf(tag + '=\"') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n              result = result.substring(0, result.indexOf('\"'));\n            } else if (xmpData.indexOf(tag + '>') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '>') + tag.length + 1);\n              result = result.substring(0, result.indexOf('<'));\n            }\n            if (result !== undefined) {\n              return Number(result);\n            }\n            return null;\n          };\n            \n            // Relevant XMP data\n          var xmp = {\n            fullWidth: getTag('GPano:FullPanoWidthPixels'),\n            croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n            fullHeight: getTag('GPano:FullPanoHeightPixels'),\n            croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n            topPixels: getTag('GPano:CroppedAreaTopPixels'),\n            heading: getTag('GPano:PoseHeadingDegrees'),\n            horizonPitch: getTag('GPano:PosePitchDegrees'),\n            horizonRoll: getTag('GPano:PoseRollDegrees')\n          };\n            \n          if (xmp.fullWidth !== null && xmp.croppedWidth !== null &&\n                xmp.fullHeight !== null && xmp.croppedHeight !== null &&\n                xmp.topPixels !== null) {\n                \n            // Set up viewer using GPano XMP data\n            if (specifiedPhotoSphereExcludes.indexOf('haov') < 0)\n              {config.haov = xmp.croppedWidth / xmp.fullWidth * 360;}\n            if (specifiedPhotoSphereExcludes.indexOf('vaov') < 0)\n              {config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;}\n            if (specifiedPhotoSphereExcludes.indexOf('vOffset') < 0)\n              {config.vOffset = ((xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5) * -180;}\n            if (xmp.heading !== null && specifiedPhotoSphereExcludes.indexOf('northOffset') < 0) {\n              // TODO: make sure this works correctly for partial panoramas\n              config.northOffset = xmp.heading;\n              if (config.compass !== false) {\n                config.compass = true;\n              }\n            }\n            if (xmp.horizonPitch !== null && xmp.horizonRoll !== null) {\n              if (specifiedPhotoSphereExcludes.indexOf('horizonPitch') < 0)\n                {config.horizonPitch = xmp.horizonPitch;}\n              if (specifiedPhotoSphereExcludes.indexOf('horizonRoll') < 0)\n                {config.horizonRoll = xmp.horizonRoll;}\n            }\n                \n            // TODO: add support for initial view settings\n          }\n        }\n        \n        // Load panorama\n        panoImage.src = window.URL.createObjectURL(image);\n      });\n      if (reader.readAsBinaryString !== undefined)\n        {reader.readAsBinaryString(image);}\n      else\n        {reader.readAsText(image);}\n    }\n\n    /**\n * Displays an error message.\n * @private\n * @param {string} errorMsg - Error message to display. If not specified, a\n *      generic WebGL error is displayed.\n */\n    function anError(errorMsg) {\n      if (errorMsg === undefined)\n        {errorMsg = config.strings.genericWebGLError;}\n      infoDisplay.errorMsg.innerHTML = '<p>' + errorMsg + '</p>';\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'none';\n      infoDisplay.errorMsg.style.display = 'table';\n      error = true;\n      renderContainer.style.display = 'none';\n      fireEvent('error', errorMsg);\n    }\n\n    /**\n * Hides error message display.\n * @private\n */\n    function clearError() {\n      if (error) {\n        infoDisplay.load.box.style.display = 'none';\n        infoDisplay.errorMsg.style.display = 'none';\n        error = false;\n        fireEvent('errorcleared');\n      }\n    }\n\n    /**\n * Displays about message.\n * @private\n * @param {MouseEvent} event - Right click location\n */\n    function aboutMessage(event) {\n      var pos = mousePosition(event);\n      aboutMsg.style.left = pos.x + 'px';\n      aboutMsg.style.top = pos.y + 'px';\n      clearTimeout(aboutMessage.t1);\n      clearTimeout(aboutMessage.t2);\n      aboutMsg.style.display = 'block';\n      aboutMsg.style.opacity = 1;\n      aboutMessage.t1 = setTimeout(function() {aboutMsg.style.opacity = 0;}, 2000);\n      aboutMessage.t2 = setTimeout(function() {aboutMsg.style.display = 'none';}, 2500);\n      event.preventDefault();\n    }\n\n    /**\n * Calculate mouse position relative to top left of viewer container.\n * @private\n * @param {MouseEvent} event - Mouse event to use in calculation\n * @returns {Object} Calculated X and Y coordinates\n */\n    function mousePosition(event) {\n      var bounds = container.getBoundingClientRect();\n      var pos = {};\n      pos.x = event.clientX - bounds.left;\n      pos.y = event.clientY - bounds.top;\n      return pos;\n    }\n\n    /**\n * Event handler for mouse clicks. Initializes panning. Prints center and click\n * location coordinates when hot spot debugging is enabled.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentMouseDown(event) {\n    // Override default action\n      event.preventDefault();\n      // But not all of it\n      container.focus();\n    \n      // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n    \n      // Calculate mouse position relative to top left of viewer container\n      var pos = mousePosition(event);\n\n      // Log pitch / yaw of mouse click when debugging / placing hot spots\n      if (config.hotSpotDebug) {\n        var coords = mouseEventToCoords(event);\n        console.log('Pitch: ' + coords[0] + ', Yaw: ' + coords[1] + ', Center Pitch: ' +\n            config.pitch + ', Center Yaw: ' + config.yaw + ', HFOV: ' + config.hfov);\n      }\n    \n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownPointerX = pos.x;\n      onPointerDownPointerY = pos.y;\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n    \n      uiContainer.classList.add('pnlm-grabbing');\n      uiContainer.classList.remove('pnlm-grab');\n    \n      fireEvent('mousedown', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for double clicks. Zooms in at clicked location\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentDoubleClick(event) {\n      if (config.minHfov === config.hfov) {\n        _this.setHfov(origHfov, 1000);\n      } else {\n        var coords = mouseEventToCoords(event);\n        _this.lookAt(coords[0], coords[1], config.minHfov, 1000);\n      }\n    }\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    function mouseEventToCoords(event) {\n      var pos = mousePosition(event);\n      var canvas = renderer.getCanvas();\n      var canvasWidth = canvas.clientWidth,\n        canvasHeight = canvas.clientHeight;\n      var x = pos.x / canvasWidth * 2 - 1;\n      var y = (1 - pos.y / canvasHeight * 2) * canvasHeight / canvasWidth;\n      var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n      var s = Math.sin(config.pitch * Math.PI / 180);\n      var c = Math.cos(config.pitch * Math.PI / 180);\n      var a = focal * c - y * s;\n      var root = Math.sqrt(x*x + a*a);\n      var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n      var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n      if (yaw < -180)\n        {yaw += 360;}\n      if (yaw > 180)\n        {yaw -= 360;}\n      return [pitch, yaw];\n    }\n\n    /**\n * Event handler for mouse moves. Pans center of view.\n * @private\n * @param {MouseEvent} event - Document mouse move event.\n */\n    function onDocumentMouseMove(event) {\n      if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        var canvas = renderer.getCanvas();\n        var canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var pos = mousePosition(event);\n        //TODO: This still isn't quite right\n        var yaw = ((Math.atan(onPointerDownPointerX / canvasWidth * 2 - 1) - Math.atan(pos.x / canvasWidth * 2 - 1)) * 180 / Math.PI * config.hfov / 90) + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var vfov = 2 * Math.atan(Math.tan(config.hfov/360*Math.PI) * canvasHeight / canvasWidth) * 180 / Math.PI;\n        \n        var pitch = ((Math.atan(pos.y / canvasHeight * 2 - 1) - Math.atan(onPointerDownPointerY / canvasHeight * 2 - 1)) * 180 / Math.PI * vfov / 90) + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for mouse up events. Stops panning.\n * @private\n */\n    function onDocumentMouseUp(event) {\n      if (!isUserInteracting) {\n        return;\n      }\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        speed.pitch = speed.yaw = 0;\n      }\n      uiContainer.classList.add('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n      latestInteraction = Date.now();\n\n      fireEvent('mouseup', event);\n    }\n\n    /**\n * Event handler for touches. Initializes panning if one touch or zooming if\n * two touches.\n * @private\n * @param {TouchEvent} event - Document touch start event.\n */\n    function onDocumentTouchStart(event) {\n    // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      // Calculate touch position relative to top left of viewer container\n      var pos0 = mousePosition(event.targetTouches[0]);\n\n      onPointerDownPointerX = pos0.x;\n      onPointerDownPointerY = pos0.y;\n    \n      if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        var pos1 = mousePosition(event.targetTouches[1]);\n        onPointerDownPointerX += (pos1.x - pos0.x) * 0.5;\n        onPointerDownPointerY += (pos1.y - pos0.y) * 0.5;\n        onPointerDownPointerDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                             (pos0.y - pos1.y) * (pos0.y - pos1.y));\n      }\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n\n      fireEvent('touchstart', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for touch movements. Pans center of view if one touch or\n * adjusts zoom if two touches.\n * @private\n * @param {TouchEvent} event - Document touch move event.\n */\n    function onDocumentTouchMove(event) {\n      if (!config.draggable) {\n        return;\n      }\n\n      // Override default action\n      event.preventDefault();\n      if (loaded) {\n        latestInteraction = Date.now();\n      }\n      if (isUserInteracting && loaded) {\n        var pos0 = mousePosition(event.targetTouches[0]);\n        var clientX = pos0.x;\n        var clientY = pos0.y;\n        \n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n          var pos1 = mousePosition(event.targetTouches[1]);\n          clientX += (pos1.x - pos0.x) * 0.5;\n          clientY += (pos1.y - pos0.y) * 0.5;\n          var clientDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                       (pos0.y - pos1.y) * (pos0.y - pos1.y));\n          setHfov(config.hfov + (onPointerDownPointerDist - clientDist) * 0.1);\n          onPointerDownPointerDist = clientDist;\n        }\n\n        // The smaller the config.hfov value (the more zoomed-in the user is), the faster\n        // yaw/pitch are perceived to change on one-finger touchmove (panning) events and vice versa.\n        // To improve usability at both small and large zoom levels (config.hfov values)\n        // we introduce a dynamic pan speed coefficient.\n        //\n        // Currently this seems to *roughly* keep initial drag/pan start position close to\n        // the user's finger while panning regardless of zoom level / config.hfov value.\n        var touchmovePanSpeedCoeff = (config.hfov / 360) * config.touchPanSpeedCoeffFactor;\n\n        var yaw = (onPointerDownPointerX - clientX) * touchmovePanSpeedCoeff + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n\n        var pitch = (clientY - onPointerDownPointerY) * touchmovePanSpeedCoeff + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for end of touches. Stops panning and/or zooming.\n * @private\n */\n    function onDocumentTouchEnd() {\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 150) {\n        speed.pitch = speed.yaw = 0;\n      }\n      onPointerDownPointerDist = -1;\n      latestInteraction = Date.now();\n\n      fireEvent('touchend', event);\n    }\n\n    var pointerIDs = [],\n      pointerCoordinates = [];\n    /**\n * Event handler for touch starts in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer down event.\n */\n    function onDocumentPointerDown(event) {\n      if (event.pointerType == 'touch') {\n        pointerIDs.push(event.pointerId);\n        pointerCoordinates.push({ clientX: event.clientX, clientY: event.clientY });\n        event.targetTouches = pointerCoordinates;\n        onDocumentTouchStart(event);\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for touch moves in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer move event.\n */\n    function onDocumentPointerMove(event) {\n      if (event.pointerType == 'touch') {\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerCoordinates[i].clientX = event.clientX;\n            pointerCoordinates[i].clientY = event.clientY;\n            event.targetTouches = pointerCoordinates;\n            onDocumentTouchMove(event);\n            event.preventDefault();\n            return;\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for touch ends in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer up event.\n */\n    function onDocumentPointerUp(event) {\n      if (event.pointerType == 'touch') {\n        var defined = false;\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i])\n            {pointerIDs[i] = undefined;}\n          if (pointerIDs[i])\n            {defined = true;}\n        }\n        if (!defined) {\n          pointerIDs = [];\n          pointerCoordinates = [];\n          onDocumentTouchEnd();\n        }\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for mouse wheel. Changes zoom.\n * @private\n * @param {WheelEvent} event - Document mouse wheel event.\n */\n    function onDocumentMouseWheel(event) {\n    // Only do something if the panorama is loaded and mouse wheel zoom is enabled\n      if (!loaded || (config.mouseZoom == 'fullscreenonly' && !fullscreenActive)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov - event.wheelDeltaY * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov - event.wheelDelta * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov + event.detail * 1.5);\n        speed.hfov = event.detail > 0 ? 1 : -1;\n      }\n    \n      animateInit();\n    }\n\n    /**\n * Event handler for key presses. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key press event.\n */\n    function onDocumentKeyPress(event) {\n    // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      stopOrientation();\n      config.roll = 0;\n\n      // Record key pressed\n      var keynumber = event.which || event.keycode;\n\n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // If escape key is pressed\n      if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n          toggleFullscreen();\n        }\n      } else {\n        // Change key\n        changeKey(keynumber, true);\n      }\n    }\n\n    /**\n * Clears list of currently pressed keys.\n * @private\n */\n    function clearKeys() {\n      for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n      }\n    }\n\n    /**\n * Event handler for key releases. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key up event.\n */\n    function onDocumentKeyUp(event) {\n    // Record key pressed\n      var keynumber = event.which || event.keycode;\n    \n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // Change key\n      changeKey(keynumber, false);\n    }\n\n    /**\n * Updates list of currently pressed keys.\n * @private\n * @param {number} keynumber - Key number.\n * @param {boolean} value - Whether or not key is pressed.\n */\n    function changeKey(keynumber, value) {\n      var keyChanged = false;\n      switch (keynumber) {\n        // If minus key is released\n        case 109: case 189: case 17: case 173:\n          if (keysDown[0] != value) { keyChanged = true; }\n          keysDown[0] = value; break;\n        \n        // If plus key is released\n        case 107: case 187: case 16: case 61:\n          if (keysDown[1] != value) { keyChanged = true; }\n          keysDown[1] = value; break;\n        \n        // If up arrow is released\n        case 38:\n          if (keysDown[2] != value) { keyChanged = true; }\n          keysDown[2] = value; break;\n        \n        // If \"w\" is released\n        case 87:\n          if (keysDown[6] != value) { keyChanged = true; }\n          keysDown[6] = value; break;\n        \n        // If down arrow is released\n        case 40:\n          if (keysDown[3] != value) { keyChanged = true; }\n          keysDown[3] = value; break;\n        \n        // If \"s\" is released\n        case 83:\n          if (keysDown[7] != value) { keyChanged = true; }\n          keysDown[7] = value; break;\n        \n        // If left arrow is released\n        case 37:\n          if (keysDown[4] != value) { keyChanged = true; }\n          keysDown[4] = value; break;\n        \n        // If \"a\" is released\n        case 65:\n          if (keysDown[8] != value) { keyChanged = true; }\n          keysDown[8] = value; break;\n        \n        // If right arrow is released\n        case 39:\n          if (keysDown[5] != value) { keyChanged = true; }\n          keysDown[5] = value; break;\n        \n        // If \"d\" is released\n        case 68:\n          if (keysDown[9] != value) { keyChanged = true; }\n          keysDown[9] = value;\n      }\n    \n      if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n          prevTime = performance.now();\n        } else {\n          prevTime = Date.now();\n        }\n        animateInit();\n      }\n    }\n\n    /**\n * Pans and/or zooms panorama based on currently pressed keys. Also handles\n * panorama \"inertia\" and auto rotation.\n * @private\n */\n    function keyRepeat() {\n    // Only do something if the panorama is loaded\n      if (!loaded) {\n        return;\n      }\n\n      var isKeyDown = false;\n\n      var prevPitch = config.pitch;\n      var prevYaw = config.yaw;\n      var prevZoom = config.hfov;\n    \n      var newTime;\n      if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n      } else {\n        newTime = Date.now();\n      }\n      if (prevTime === undefined) {\n        prevTime = newTime;\n      }\n      var diff = (newTime - prevTime) * config.hfov / 1700;\n      diff = Math.min(diff, 1.0);\n    \n      // If minus key is down\n      if (keysDown[0] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 + 0.5) * diff);\n        isKeyDown = true;\n      }\n    \n      // If plus key is down\n      if (keysDown[1] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 - 0.2) * diff);\n        isKeyDown = true;\n      }\n    \n      // If up arrow or \"w\" is down\n      if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (speed.pitch * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If down arrow or \"s\" is down\n      if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (speed.pitch * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If left arrow or \"a\" is down\n      if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (speed.yaw * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If right arrow or \"d\" is down\n      if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (speed.yaw * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n\n      if (isKeyDown)\n        {latestInteraction = Date.now();}\n\n      // If auto-rotate\n      var inactivityInterval = Date.now() - latestInteraction;\n      if (config.autoRotate) {\n        // Pan\n        if (newTime - prevTime > 0.001) {\n          var timeDiff = (newTime - prevTime) / 1000;\n          var yawDiff = (speed.yaw / timeDiff * diff - config.autoRotate * 0.2) * timeDiff;\n          yawDiff = (-config.autoRotate > 0 ? 1 : -1) * Math.min(Math.abs(config.autoRotate * timeDiff), Math.abs(yawDiff));\n          config.yaw += yawDiff;\n        }\n        \n        // Deal with stopping auto rotation after a set delay\n        if (config.autoRotateStopDelay) {\n          config.autoRotateStopDelay -= newTime - prevTime;\n          if (config.autoRotateStopDelay <= 0) {\n            config.autoRotateStopDelay = false;\n            autoRotateSpeed = config.autoRotate;\n            config.autoRotate = 0;\n          }\n        }\n      }\n\n      // Animated moves\n      if (animatedMove.pitch) {\n        animateMove('pitch');\n        prevPitch = config.pitch;\n      }\n      if (animatedMove.yaw) {\n        animateMove('yaw');\n        prevYaw = config.yaw;\n      }\n      if (animatedMove.hfov) {\n        animateMove('hfov');\n        prevZoom = config.hfov;\n      }\n\n      // \"Inertia\"\n      if (diff > 0 && !config.autoRotate) {\n        // \"Friction\"\n        var friction = 0.85;\n        \n        // Yaw\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9] && !animatedMove.yaw) {\n          config.yaw += speed.yaw * diff * friction;\n        }\n        // Pitch\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7] && !animatedMove.pitch) {\n          config.pitch += speed.pitch * diff * friction;\n        }\n        // Zoom\n        if (!keysDown[0] && !keysDown[1] && !animatedMove.hfov) {\n          setHfov(config.hfov + speed.hfov * diff * friction);\n        }\n      }\n\n      prevTime = newTime;\n      if (diff > 0) {\n        speed.yaw = speed.yaw * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        speed.pitch = speed.pitch * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        speed.hfov = speed.hfov * 0.8 + (config.hfov - prevZoom) / diff * 0.2;\n        \n        // Limit speed\n        var maxSpeed = config.autoRotate ? Math.abs(config.autoRotate) : 5;\n        speed.yaw = Math.min(maxSpeed, Math.max(speed.yaw, -maxSpeed));\n        speed.pitch = Math.min(maxSpeed, Math.max(speed.pitch, -maxSpeed));\n        speed.hfov = Math.min(maxSpeed, Math.max(speed.hfov, -maxSpeed));\n      }\n    \n      // Stop movement if opposite controls are pressed\n      if (keysDown[0] && keysDown[1]) {\n        speed.hfov = 0;\n      }\n      if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        speed.pitch = 0;\n      }\n      if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        speed.yaw = 0;\n      }\n    }\n\n    /**\n * Animates moves.\n * @param {string} axis - Axis to animate\n * @private\n */\n    function animateMove(axis) {\n      var t = animatedMove[axis];\n      var normTime = Math.min(1, Math.max((Date.now() - t.startTime) / 1000 / (t.duration / 1000), 0));\n      var result = t.startPosition + config.animationTimingFunction(normTime) * (t.endPosition - t.startPosition);\n      if ((t.endPosition > t.startPosition && result >= t.endPosition) ||\n        (t.endPosition < t.startPosition && result <= t.endPosition) ||\n        t.endPosition === t.startPosition) {\n        result = t.endPosition;\n        speed[axis] = 0;\n        var callback = animatedMove[axis].callback,\n          callbackArgs = animatedMove[axis].callbackArgs;\n        delete animatedMove[axis];\n        if (typeof callback === 'function')\n          {callback(callbackArgs);}\n      }\n      config[axis] = result;\n    }\n\n    /**\n * @param {number} t - Normalized time in animation\n * @return {number} Position in animation\n * @private\n */\n    function timingFunction(t) {\n    // easeInOutQuad from https://gist.github.com/gre/1650294\n      return t < 0.5 ? 2*t*t : -1+(4-2*t)*t;\n    }\n\n    /**\n * Event handler for document resizes. Updates viewer size and rerenders view.\n * @private\n */\n    function onDocumentResize() {\n    // Resize panorama renderer (moved to onFullScreenChange)\n    //renderer.resize();\n    //animateInit();\n\n    // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n      onFullScreenChange();\n    }\n\n    /**\n * Initializes animation.\n * @private\n */\n    function animateInit() {\n      if (animating) {\n        return;\n      }\n      animating = true;\n      animate();\n    }\n\n    /**\n * Animates view, using requestAnimationFrame to trigger rendering.\n * @private\n */\n    function animate() {\n      render();\n      if (autoRotateStart)\n        {clearTimeout(autoRotateStart);}\n      if (isUserInteracting || orientation === true) {\n        requestAnimationFrame(animate);\n      } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] ||\n        keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] ||\n        keysDown[8] || keysDown[9] || config.autoRotate ||\n        animatedMove.pitch || animatedMove.yaw || animatedMove.hfov ||\n        Math.abs(speed.yaw) > 0.01 || Math.abs(speed.pitch) > 0.01 ||\n        Math.abs(speed.hfov) > 0.01) {\n\n        keyRepeat();\n        if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed &&\n            Date.now() - latestInteraction > config.autoRotateInactivityDelay &&\n            !config.autoRotate) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n        }\n        requestAnimationFrame(animate);\n      } else if (renderer && (renderer.isLoading() || (config.dynamic === true && update))) {\n        requestAnimationFrame(animate);\n      } else {\n        animating = false;\n        prevTime = undefined;\n        var autoRotateStartTime = config.autoRotateInactivityDelay -\n            (Date.now() - latestInteraction);\n        if (autoRotateStartTime > 0) {\n          autoRotateStart = setTimeout(function() {\n            config.autoRotate = autoRotateSpeed;\n            _this.lookAt(origPitch, undefined, origHfov, 3000);\n            animateInit();\n          }, autoRotateStartTime);\n        } else if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n          animateInit();\n        }\n      }\n    }\n\n    /**\n * Renders panorama view.\n * @private\n */\n    function render() {\n      var tmpyaw;\n\n      if (loaded) {\n        if (config.yaw > 180) {\n          config.yaw -= 360;\n        } else if (config.yaw < -180) {\n          config.yaw += 360;\n        }\n\n        // Keep a tmp value of yaw for autoRotate comparison later\n        tmpyaw = config.yaw;\n\n        // Optionally avoid showing background (empty space) on left or right by adapting min/max yaw\n        var hoffcut = 0,\n          voffcut = 0;\n        if (config.avoidShowingBackground) {\n          var canvas = renderer.getCanvas(),\n            hfov2 = config.hfov / 2,\n            vfov2 = Math.atan2(Math.tan(hfov2 / 180 * Math.PI), (canvas.width / canvas.height)) * 180 / Math.PI,\n            transposed = config.vaov > config.haov;\n          if (transposed) {\n            voffcut = vfov2 * (1 - Math.min(Math.cos((config.pitch - hfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + hfov2) / 180 * Math.PI)));\n          } else {\n            hoffcut = hfov2 * (1 - Math.min(Math.cos((config.pitch - vfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + vfov2) / 180 * Math.PI)));\n          }\n        }\n\n        // Ensure the yaw is within min and max allowed\n        var yawRange = config.maxYaw - config.minYaw,\n          minYaw = -180,\n          maxYaw = 180;\n        if (yawRange < 360) {\n          minYaw = config.minYaw + config.hfov / 2 + hoffcut;\n          maxYaw = config.maxYaw - config.hfov / 2 - hoffcut;\n          if (yawRange < config.hfov) {\n            // Lock yaw to average of min and max yaw when both can be seen at once\n            minYaw = maxYaw = (minYaw + maxYaw) / 2;\n          }\n          config.yaw = Math.max(minYaw, Math.min(maxYaw, config.yaw));\n        }\n        \n        // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n        if (config.autoRotate !== false && tmpyaw != config.yaw &&\n            prevTime !== undefined) { // this condition prevents changing the direction initially\n          config.autoRotate *= -1;\n        }\n\n        // Ensure the calculated pitch is within min and max allowed\n        var canvas = renderer.getCanvas();\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 180 * Math.PI * 0.5) /\n            (canvas.width / canvas.height)) / Math.PI * 180;\n        var minPitch = config.minPitch + vfov / 2,\n          maxPitch = config.maxPitch - vfov / 2;\n        var pitchRange = config.maxPitch - config.minPitch;\n        if (pitchRange < vfov) {\n          // Lock pitch to average of min and max pitch when both can be seen at once\n          minPitch = maxPitch = (minPitch + maxPitch) / 2;\n        }\n        if (isNaN(minPitch))\n          {minPitch = -90;}\n        if (isNaN(maxPitch))\n          {maxPitch = 90;}\n        config.pitch = Math.max(minPitch, Math.min(maxPitch, config.pitch));\n        \n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { roll: config.roll * Math.PI / 180 });\n        \n        renderHotSpots();\n        \n        // Update compass\n        if (config.compass) {\n          compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n          compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n        \n        if (config.onRender) {\n          config.onRender();\n        }\n      }\n    }\n\n    /**\n * Creates a new quaternion.\n * @private\n * @constructor\n * @param {Number} w - W value\n * @param {Number} x - X value\n * @param {Number} y - Y value\n * @param {Number} z - Z value\n */\n    function Quaternion(w, x, y, z) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    /**\n * Multiplies quaternions.\n * @private\n * @param {Quaternion} q - Quaternion to multiply\n * @returns {Quaternion} Result of multiplication\n */\n    Quaternion.prototype.multiply = function(q) {\n      return new Quaternion(this.w*q.w - this.x*q.x - this.y*q.y - this.z*q.z,\n        this.x*q.w + this.w*q.x + this.y*q.z - this.z*q.y,\n        this.y*q.w + this.w*q.y + this.z*q.x - this.x*q.z,\n        this.z*q.w + this.w*q.z + this.x*q.y - this.y*q.x);\n    };\n\n    /**\n * Converts quaternion to Euler angles.\n * @private\n * @returns {Number[]} [phi angle, theta angle, psi angle]\n */\n    Quaternion.prototype.toEulerAngles = function() {\n      var phi = Math.atan2(2 * (this.w * this.x + this.y * this.z),\n          1 - 2 * (this.x * this.x + this.y * this.y)),\n        theta = Math.asin(2 * (this.w * this.y - this.z * this.x)),\n        psi = Math.atan2(2 * (this.w * this.z + this.x * this.y),\n          1 - 2 * (this.y * this.y + this.z * this.z));\n      return [phi, theta, psi];\n    };\n\n    /**\n * Converts device orientation API Tait-Bryan angles to a quaternion.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function taitBryanToQuaternion(alpha, beta, gamma) {\n      var r = [beta ? beta * Math.PI / 180 / 2 : 0,\n        gamma ? gamma * Math.PI / 180 / 2 : 0,\n        alpha ? alpha * Math.PI / 180 / 2 : 0];\n      var c = [Math.cos(r[0]), Math.cos(r[1]), Math.cos(r[2])],\n        s = [Math.sin(r[0]), Math.sin(r[1]), Math.sin(r[2])];\n\n      return new Quaternion(c[0]*c[1]*c[2] - s[0]*s[1]*s[2],\n        s[0]*c[1]*c[2] - c[0]*s[1]*s[2],\n        c[0]*s[1]*c[2] + s[0]*c[1]*s[2],\n        c[0]*c[1]*s[2] + s[0]*s[1]*c[2]);\n    }\n\n    /**\n * Computes current device orientation quaternion from device orientation API\n * Tait-Bryan angles.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function computeQuaternion(alpha, beta, gamma) {\n    // Convert Tait-Bryan angles to quaternion\n      var quaternion = taitBryanToQuaternion(alpha, beta, gamma);\n      // Apply world transform\n      quaternion = quaternion.multiply(new Quaternion(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0));\n      // Apply screen transform\n      var angle = window.orientation ? -window.orientation * Math.PI / 180 / 2 : 0;\n      return quaternion.multiply(new Quaternion(Math.cos(angle), 0, -Math.sin(angle), 0));\n    }\n\n    /**\n * Event handler for device orientation API. Controls pointing.\n * @private\n * @param {DeviceOrientationEvent} event - Device orientation event.\n */\n    function orientationListener(e) {\n      var q = computeQuaternion(e.alpha, e.beta, e.gamma).toEulerAngles();\n      if (typeof(orientation) === 'number' && orientation < 10) {\n        // This kludge is necessary because iOS sometimes provides a few stale\n        // device orientation events when the listener is removed and then\n        // readded. Thus, we skip the first 10 events to prevent this from\n        // causing problems.\n        orientation += 1;\n      } else if (orientation === 10) {\n        // Record starting yaw to prevent jumping\n        orientationYawOffset = q[2] / Math.PI * 180 + config.yaw;\n        orientation = true;\n        requestAnimationFrame(animate);\n      } else {\n        config.pitch = q[0] / Math.PI * 180;\n        config.roll = -q[1] / Math.PI * 180;\n        config.yaw = -q[2] / Math.PI * 180 + orientationYawOffset;\n      }\n    }\n\n    /**\n * Initializes renderer.\n * @private\n */\n    function renderInit() {\n      try {\n        var params = {};\n        if (config.horizonPitch !== undefined)\n          {params.horizonPitch = config.horizonPitch * Math.PI / 180;}\n        if (config.horizonRoll !== undefined)\n          {params.horizonRoll = config.horizonRoll * Math.PI / 180;}\n        if (config.backgroundColor !== undefined)\n          {params.backgroundColor = config.backgroundColor;}\n        renderer.init(panoImage, config.type, config.dynamic, config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback, params);\n        if (config.dynamic !== true) {\n          // Allow image to be garbage collected\n          panoImage = undefined;\n        }\n      } catch (event) {\n        // Panorama not loaded\n        \n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n          anError();\n        } else if (event.type == 'webgl size error') {\n          anError(config.strings.textureSizeError.replace('%s', event.width).replace('%s', event.maxWidth));\n        } else {\n          anError(config.strings.unknownError);\n          throw event;\n        }\n      }\n    }\n\n    /**\n * Triggered when render initialization finishes. Handles fading between\n * scenes as well as showing the compass and hotspots and hiding the loading\n * display.\n * @private\n */\n    function renderInitCallback() {\n    // Fade if specified\n      if (config.sceneFadeDuration && renderer.fadeImg !== undefined) {\n        renderer.fadeImg.style.opacity = 0;\n        // Remove image\n        var fadeImg = renderer.fadeImg;\n        delete renderer.fadeImg;\n        setTimeout(function() {\n          renderContainer.removeChild(fadeImg);\n          fireEvent('scenechangefadedone');\n        }, config.sceneFadeDuration);\n      }\n    \n      // Show compass if applicable\n      if (config.compass) {\n        compass.style.display = 'inline';\n      } else {\n        compass.style.display = 'none';\n      }\n    \n      // Show hotspots\n      createHotSpots();\n    \n      // Hide loading display\n      infoDisplay.load.box.style.display = 'none';\n      if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n      }\n      loaded = true;\n\n      fireEvent('load');\n    \n      animateInit();\n    }\n\n    /**\n * Creates hot spot element for the current scene.\n * @private\n * @param {Object} hs - The configuration for the hotspot\n */\n    function createHotSpot(hs) {\n    // Make sure hot spot pitch and yaw are numbers\n      hs.pitch = Number(hs.pitch) || 0;\n      hs.yaw = Number(hs.yaw) || 0;\n\n      var div = document.createElement('div');\n      div.className = 'pnlm-hotspot-base';\n      if (hs.cssClass)\n        {div.className += ' ' + hs.cssClass;}\n      else\n        {div.className += ' pnlm-hotspot pnlm-sprite pnlm-' + escapeHTML(hs.type);}\n\n      var span = document.createElement('span');\n      if (hs.text)\n        {span.innerHTML = escapeHTML(hs.text);}\n\n      var a;\n      if (hs.video) {\n        var video = document.createElement('video'),\n          p = hs.video;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        video.src = sanitizeURL(p);\n        video.controls = true;\n        video.style.width = hs.width + 'px';\n        renderContainer.appendChild(div);\n        span.appendChild(video);\n      } else if (hs.image) {\n        var p = hs.image;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL ? hs.URL : p);\n        a.target = '_blank';\n        span.appendChild(a);\n        var image = document.createElement('img');\n        image.src = sanitizeURL(p);\n        image.style.width = hs.width + 'px';\n        image.style.paddingTop = '5px';\n        renderContainer.appendChild(div);\n        a.appendChild(image);\n        span.style.maxWidth = 'initial';\n      } else if (hs.URL) {\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL);\n        a.target = '_blank';\n        renderContainer.appendChild(a);\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n        a.appendChild(div);\n      } else {\n        if (hs.sceneId) {\n          div.onclick = div.ontouchend = function() {\n            if (!div.clicked) {\n              div.clicked = true;\n              loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw, hs.targetHfov);\n            }\n            return false;\n          };\n          div.className += ' pnlm-pointer';\n          span.className += ' pnlm-pointer';\n        }\n        renderContainer.appendChild(div);\n      }\n\n      if (hs.createTooltipFunc) {\n        hs.createTooltipFunc(div, hs.createTooltipArgs);\n      } else if (hs.text || hs.video || hs.image) {\n        div.classList.add('pnlm-tooltip');\n        div.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - div.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n      }\n      if (hs.clickHandlerFunc) {\n        div.addEventListener('click', function(e) {\n          hs.clickHandlerFunc(e, hs.clickHandlerArgs);\n        }, 'false');\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n      }\n      hs.div = div;\n    };\n\n    /**\n * Creates hot spot elements for the current scene.\n * @private\n */\n    function createHotSpots() {\n      if (hotspotsCreated) {return;}\n\n      if (!config.hotSpots) {\n        config.hotSpots = [];\n      } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function(a, b) {\n          return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(createHotSpot);\n      }\n      hotspotsCreated = true;\n      renderHotSpots();\n    }\n\n    /**\n * Destroys currently created hot spot elements.\n * @private\n */\n    function destroyHotSpots() {\n      var hs = config.hotSpots;\n      hotspotsCreated = false;\n      delete config.hotSpots;\n      if (hs) {\n        for (var i = 0; i < hs.length; i++) {\n          var current = hs[i].div;\n          while (current.parentNode != renderContainer) {\n            current = current.parentNode;\n          }\n          renderContainer.removeChild(current);\n          delete hs[i].div;\n        }\n      }\n    }\n\n    /**\n * Renders hot spot, updating its position and visibility.\n * @private\n */\n    function renderHotSpot(hs) {\n      var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180),\n        hsPitchCos = Math.cos(hs.pitch * Math.PI / 180),\n        configPitchSin = Math.sin(config.pitch * Math.PI / 180),\n        configPitchCos = Math.cos(config.pitch * Math.PI / 180),\n        yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n      var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n      if ((hs.yaw <= 90 && hs.yaw > -90 && z <= 0) ||\n      ((hs.yaw > 90 || hs.yaw <= -90) && z <= 0)) {\n        hs.div.style.visibility = 'hidden';\n      } else {\n        var yawSin = Math.sin((-hs.yaw + config.yaw) * Math.PI / 180),\n          hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        hs.div.style.visibility = 'visible';\n        // Subpixel rendering doesn't work in Firefox\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n        var canvas = renderer.getCanvas(),\n          canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var coord = [-canvasWidth / hfovTan * yawSin * hsPitchCos / z / 2,\n          -canvasWidth / hfovTan * (hsPitchSin * configPitchCos -\n            hsPitchCos * yawCos * configPitchSin) / z / 2];\n        // Apply roll\n        var rollSin = Math.sin(config.roll * Math.PI / 180),\n          rollCos = Math.cos(config.roll * Math.PI / 180);\n        coord = [coord[0] * rollCos - coord[1] * rollSin,\n          coord[0] * rollSin + coord[1] * rollCos];\n        // Apply transform\n        coord[0] += (canvasWidth - hs.div.offsetWidth) / 2;\n        coord[1] += (canvasHeight - hs.div.offsetHeight) / 2;\n        var transform = 'translate(' + coord[0] + 'px, ' + coord[1] +\n            'px) translateZ(9999px) rotate(' + config.roll + 'deg)';\n        hs.div.style.webkitTransform = transform;\n        hs.div.style.MozTransform = transform;\n        hs.div.style.transform = transform;\n      }\n    }\n\n    /**\n * Renders hot spots, updating their positions and visibility.\n * @private\n */\n    function renderHotSpots() {\n      config.hotSpots.forEach(renderHotSpot);\n    }\n\n    /**\n * Merges a scene configuration into the current configuration.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n */\n    function mergeConfig(sceneId) {\n      config = {};\n      var k, s;\n      var photoSphereExcludes = ['haov', 'vaov', 'vOffset', 'northOffset', 'horizonPitch', 'horizonRoll'];\n      specifiedPhotoSphereExcludes = [];\n    \n      // Merge default config\n      for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n          config[k] = defaultConfig[k];\n        }\n      }\n    \n      // Merge default scene config\n      for (k in initialConfig.default) {\n        if (initialConfig.default.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.default.strings) {\n              if (initialConfig.default.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.default.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig.default[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    \n      // Merge current scene config\n      if ((sceneId !== null) && (sceneId !== '') && (initialConfig.scenes) && (initialConfig.scenes[sceneId])) {\n        var scene = initialConfig.scenes[sceneId];\n        for (k in scene) {\n          if (scene.hasOwnProperty(k)) {\n            if (k == 'strings') {\n              for (s in scene.strings) {\n                if (scene.strings.hasOwnProperty(s)) {\n                  config.strings[s] = escapeHTML(scene.strings[s]);\n                }\n              }\n            } else {\n              config[k] = scene[k];\n              if (photoSphereExcludes.indexOf(k) >= 0) {\n                specifiedPhotoSphereExcludes.push(k);\n              }\n            }\n          }\n        }\n        config.scene = sceneId;\n      }\n    \n      // Merge initial config\n      for (k in initialConfig) {\n        if (initialConfig.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.strings) {\n              if (initialConfig.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n * Processes configuration options.\n * @param {boolean} [isPreview] - Whether or not the preview is being displayed\n * @private\n */\n    function processOptions(isPreview) {\n      isPreview = isPreview ? isPreview : false;\n\n      // Process preview first so it always loads before the browser hits its\n      // maximum number of connections to a server as can happen with cubic\n      // panoramas\n      if (isPreview && 'preview' in config) {\n        var p = config.preview;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        preview = document.createElement('div');\n        preview.className = 'pnlm-preview-img';\n        preview.style.backgroundImage = \"url('\" + sanitizeURLForCss(p) + \"')\";\n        renderContainer.appendChild(preview);\n      }\n\n      // Handle different preview values\n      var title = config.title,\n        author = config.author;\n      if (isPreview) {\n        if ('previewTitle' in config)\n          {config.title = config.previewTitle;}\n        if ('previewAuthor' in config)\n          {config.author = config.previewAuthor;}\n      }\n\n      // Reset title / author display\n      if (!config.hasOwnProperty('title'))\n        {infoDisplay.title.innerHTML = '';}\n      if (!config.hasOwnProperty('author'))\n        {infoDisplay.author.innerHTML = '';}\n      if (!config.hasOwnProperty('title') && !config.hasOwnProperty('author'))\n        {infoDisplay.container.style.display = 'none';}\n\n      // Fill in load button label and loading box text\n      controls.load.innerHTML = '<p>' + config.strings.loadButtonLabel + '</p>';\n      infoDisplay.load.boxp.innerHTML = config.strings.loadingLabel;\n\n      // Process other options\n      for (var key in config) {\n        if (config.hasOwnProperty(key)) {\n          switch (key) {\n            case 'title':\n              infoDisplay.title.innerHTML = escapeHTML(config[key]);\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'author':\n              infoDisplay.author.innerHTML = config.strings.bylineLabel.replace('%s', escapeHTML(config[key]));\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'fallback':\n              var link = document.createElement('a');\n              link.href = sanitizeURL(config[key]);\n              link.target = '_blank';\n              link.textContent = 'Click here to view this panorama in an alternative viewer.';\n              var message = document.createElement('p');\n              message.textContent = 'Your browser does not support WebGL.';\n              message.appendChild(document.createElement('br'));\n              message.appendChild(link);\n              infoDisplay.errorMsg.innerHTML = ''; // Removes all children nodes\n              infoDisplay.errorMsg.appendChild(message);\n              break;\n            \n            case 'hfov':\n              setHfov(Number(config[key]));\n              break;\n            \n            case 'autoLoad':\n              if (config[key] === true && renderer === undefined) {\n                // Show loading box\n                infoDisplay.load.box.style.display = 'inline';\n                // Hide load button\n                controls.load.style.display = 'none';\n                // Initialize\n                init();\n              }\n              break;\n            \n            case 'showZoomCtrl':\n              if (config[key] && config.showControls != false) {\n                // Show zoom controls\n                controls.zoom.style.display = 'block';\n              } else {\n                // Hide zoom controls\n                controls.zoom.style.display = 'none';\n              }\n              break;\n\n            case 'showFullscreenCtrl':\n              if (config[key] && config.showControls != false && ('fullscreen' in document || 'mozFullScreen' in document ||\n                    'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                    \n                // Show fullscreen control\n                controls.fullscreen.style.display = 'block';\n              } else {\n                // Hide fullscreen control\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'hotSpotDebug':\n              if (config[key])\n                {hotSpotDebugIndicator.style.display = 'block';}\n              else\n                {hotSpotDebugIndicator.style.display = 'none';}\n              break;\n\n            case 'showControls':\n              if (!config[key]) {\n                controls.orientation.style.display = 'none';\n                controls.zoom.style.display = 'none';\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'orientationOnByDefault':\n              if (config[key]) {\n                if (orientationSupport === undefined)\n                  {startOrientationIfSupported = true;}\n                else if (orientationSupport === true)\n                  {startOrientation();}\n              }\n              break;\n          }\n        }\n      }\n\n      if (isPreview) {\n        // Restore original values if changed for preview\n        if (title)\n          {config.title = title;}\n        else\n          {delete config.title;}\n        if (author)\n          {config.author = author;}\n        else\n          {delete config.author;}\n      }\n    }\n\n    /**\n * Toggles fullscreen mode.\n * @private\n */\n    function toggleFullscreen() {\n      if (loaded && !error) {\n        if (!fullscreenActive) {\n          try {\n            if (container.requestFullscreen) {\n              container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n              container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n              container.msRequestFullscreen();\n            } else {\n              container.webkitRequestFullScreen();\n            }\n          } catch (event) {\n            // Fullscreen doesn't work\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for fullscreen changes.\n * @private\n */\n    function onFullScreenChange() {\n      let isFullScreen = (window.innerWidth == screen.width && window.innerHeight == screen.height);\n      if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || isFullScreen) {\n        controls.fullscreen.classList.add('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = true;\n      } else {\n        controls.fullscreen.classList.remove('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = false;\n      }\n\n      // Resize renderer (deal with browser quirks and fixes #155)\n      renderer.resize();\n      setHfov(config.hfov);\n      animateInit();\n    }\n\n    /**\n * Increases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomIn() {\n      if (loaded) {\n        setHfov(config.hfov - 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Decreases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomOut() {\n      if (loaded) {\n        setHfov(config.hfov + 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Clamps horzontal field of view to viewer's limits.\n * @private\n * @param {number} hfov - Input horizontal field of view (in degrees)\n * @return {number} - Clamped horizontal field of view (in degrees)\n */\n    function constrainHfov(hfov) {\n    // Keep field of view within bounds\n      var minHfov = config.minHfov;\n      if (config.type == 'multires' && renderer) {\n        minHfov = Math.min(minHfov, renderer.getCanvas().width / (config.multiRes.cubeResolution / 90 * 0.9));\n      }\n      if (minHfov > config.maxHfov) {\n        // Don't change view if bounds don't make sense\n        console.log('HFOV bounds do not make sense (minHfov > maxHfov).');\n        return config.hfov;\n      }\n      var newHfov = config.hfov;\n      if (hfov < minHfov) {\n        newHfov = minHfov;\n      } else if (hfov > config.maxHfov) {\n        newHfov = config.maxHfov;\n      } else {\n        newHfov = hfov;\n      }\n      // Optionally avoid showing background (empty space) on top or bottom by adapting newHfov\n      if (config.avoidShowingBackground && renderer) {\n        var canvas = renderer.getCanvas();\n        newHfov = Math.min(newHfov,\n          Math.atan(Math.tan((config.maxPitch - config.minPitch) / 360 * Math.PI) /\n                                     canvas.height * canvas.width)\n                               * 360 / Math.PI);\n      }\n      return newHfov;\n    }\n\n    /**\n * Sets viewer's horizontal field of view.\n * @private\n * @param {number} hfov - Desired horizontal field of view in degrees.\n */\n    function setHfov(hfov) {\n      config.hfov = constrainHfov(hfov);\n    }\n\n    /**\n * Stops auto rotation and animated moves.\n * @private\n */\n    function stopAnimation() {\n      animatedMove = {};\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n    }\n\n    /**\n * Loads panorama.\n * @private\n */\n    function load() {\n    // Since WebGL error handling is very general, first we clear any error box\n    // since it is a new scene and the error from previous maybe because of lacking\n    // memory etc and not because of a lack of WebGL support etc\n      clearError();\n      loaded = false;\n\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'inline';\n      init();\n    }\n\n    /**\n * Loads scene.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n * @param {number} targetPitch - Pitch viewer should be centered on once scene loads.\n * @param {number} targetYaw - Yaw viewer should be centered on once scene loads.\n * @param {number} targetHfov - HFOV viewer should use once scene loads.\n * @param {boolean} [fadeDone] - If `true`, fade setup is skipped.\n */\n    function loadScene(sceneId, targetPitch, targetYaw, targetHfov, fadeDone) {\n      loaded = false;\n      animatedMove = {};\n    \n      // Set up fade if specified\n      var fadeImg, workingPitch, workingYaw, workingHfov;\n      if (config.sceneFadeDuration && !fadeDone) {\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { returnImage: true });\n        if (data !== undefined) {\n          fadeImg = new Image();\n          fadeImg.className = 'pnlm-fade-img';\n          fadeImg.style.transition = 'opacity ' + (config.sceneFadeDuration / 1000) + 's';\n          fadeImg.style.width = '100%';\n          fadeImg.style.height = '100%';\n          fadeImg.onload = function() {\n            loadScene(sceneId, targetPitch, targetYaw, targetHfov, true);\n          };\n          fadeImg.src = data;\n          renderContainer.appendChild(fadeImg);\n          renderer.fadeImg = fadeImg;\n          return;\n        }\n      }\n    \n      // Set new pointing\n      if (targetPitch === 'same') {\n        workingPitch = config.pitch;\n      } else {\n        workingPitch = targetPitch;\n      }\n      if (targetYaw === 'same') {\n        workingYaw = config.yaw;\n      } else if (targetYaw === 'sameAzimuth') {\n        workingYaw = config.yaw + (config.northOffset || 0) - (initialConfig.scenes[sceneId].northOffset || 0);\n      } else {\n        workingYaw = targetYaw;\n      }\n      if (targetHfov === 'same') {\n        workingHfov = config.hfov;\n      } else {\n        workingHfov = targetHfov;\n      }\n    \n      // Destroy hot spots from previous scene\n      destroyHotSpots();\n    \n      // Create the new config for the scene\n      mergeConfig(sceneId);\n\n      // Stop motion\n      speed.yaw = speed.pitch = speed.hfov = 0;\n\n      // Reload scene\n      processOptions();\n      if (workingPitch !== undefined) {\n        config.pitch = workingPitch;\n      }\n      if (workingYaw !== undefined) {\n        config.yaw = workingYaw;\n      }\n      if (workingHfov !== undefined) {\n        config.hfov = workingHfov;\n      }\n      fireEvent('scenechange', sceneId);\n      load();\n    }\n\n    /**\n * Stop using device orientation.\n * @private\n */\n    function stopOrientation() {\n      window.removeEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.remove('pnlm-orientation-button-active');\n      orientation = false;\n    }\n\n    /**\n * Start using device orientation.\n * @private\n */\n    function startOrientation() {\n      orientation = 1;\n      window.addEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.add('pnlm-orientation-button-active');\n    }\n\n    /**\n * Escapes HTML string (to mitigate possible DOM XSS attacks).\n * @private\n * @param {string} s - String to escape\n * @returns {string} Escaped string\n */\n    function escapeHTML(s) {\n      if (!initialConfig.escapeHTML)\n        {return String(s).split('\\n').join('<br>');}\n      return String(s).split(/&/g).join('&amp;')\n        .split('\"').join('&quot;')\n        .split(\"'\").join('&#39;')\n        .split('<').join('&lt;')\n        .split('>').join('&gt;')\n        .split('/').join('&#x2f;')\n        .split('\\n').join('<br>');  // Allow line breaks\n    }\n\n    /**\n * Removes possibility of XSS attacks with URLs.\n * The URL cannot be of protocol 'javascript'.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURL(url) {\n      if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n        return 'about:blank';\n      }\n      return url;\n    }\n\n    /**\n * Removes possibility of XSS atacks with URLs for CSS.\n * The URL will be sanitized with `sanitizeURL()` and single quotes\n * and double quotes escaped.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURLForCss(url) {\n      return sanitizeURL(url)\n        .replace(/\"/g, '%22')\n        .replace(/'/g, '%27');\n    }\n\n    /**\n * Checks whether or not a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} `true` if a panorama is loaded, else `false`\n */\n    this.isLoaded = function() {\n      return Boolean(loaded);\n    };\n\n    /**\n * Returns the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Pitch in degrees\n */\n    this.getPitch = function() {\n      return config.pitch;\n    };\n\n    /**\n * Sets the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Pitch in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setPitch = function(pitch, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.pitch = {\n          'startTime': Date.now(),\n          'startPosition': config.pitch,\n          'endPosition': pitch,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.pitch = pitch;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum pitch, maximum pitch]\n */\n    this.getPitchBounds = function() {\n      return [config.minPitch, config.maxPitch];\n    };\n\n    /**\n * Set the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum pitch, maximum pitch]\n * @returns {Viewer} `this`\n */\n    this.setPitchBounds = function(bounds) {\n      config.minPitch = Math.max(-90, Math.min(bounds[0], 90));\n      config.maxPitch = Math.max(-90, Math.min(bounds[1], 90));\n      return this;\n    };\n\n    /**\n * Returns the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Yaw in degrees\n */\n    this.getYaw = function() {\n      return config.yaw;\n    };\n\n    /**\n * Sets the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} yaw - Yaw in degrees [-180, 180]\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setYaw = function(yaw, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      yaw = ((yaw + 180) % 360) - 180; // Keep in bounds\n      if (animated) {\n        // Animate in shortest direction\n        if (config.yaw - yaw > 180)\n          {yaw += 360}\n        else if (yaw - config.yaw > 180)\n          {yaw -= 360}\n\n        animatedMove.yaw = {\n          'startTime': Date.now(),\n          'startPosition': config.yaw,\n          'endPosition': yaw,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.yaw = yaw;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [yaw pitch, maximum yaw]\n */\n    this.getYawBounds = function() {\n      return [config.minYaw, config.maxYaw];\n    };\n\n    /**\n * Set the minimum and maximum allowed yaws (in degrees [-180, 180]).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum yaw, maximum yaw]\n * @returns {Viewer} `this`\n */\n    this.setYawBounds = function(bounds) {\n      config.minYaw = Math.max(-180, Math.min(bounds[0], 180));\n      config.maxYaw = Math.max(-180, Math.min(bounds[1], 180));\n      return this;\n    };\n\n    /**\n * Returns the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizontal field of view in degrees\n */\n    this.getHfov = function() {\n      return config.hfov;\n    };\n\n    /**\n * Sets the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @param {number} hfov - Horizontal field of view in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setHfov = function(hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.hfov = {\n          'startTime': Date.now(),\n          'startPosition': config.hfov,\n          'endPosition': constrainHfov(hfov),\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        setHfov(hfov);\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed horizontal fields of view\n * (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum hfov, maximum hfov]\n */\n    this.getHfovBounds = function() {\n      return [config.minHfov, config.maxHfov];\n    };\n\n    /**\n * Set the minimum and maximum allowed horizontal fields of view (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum hfov, maximum hfov]\n * @returns {Viewer} `this`\n */\n    this.setHfovBounds = function(bounds) {\n      config.minHfov = Math.max(0, bounds[0]);\n      config.maxHfov = Math.max(0, bounds[1]);\n      return this;\n    };\n\n    /**\n * Set a new view. Any parameters not specified remain the same.\n * @memberof Viewer\n * @instance\n * @param {number} [pitch] - Target pitch\n * @param {number} [yaw] - Target yaw\n * @param {number} [hfov] - Target hfov\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.lookAt = function(pitch, yaw, hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (pitch !== undefined) {\n        this.setPitch(pitch, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (yaw !== undefined) {\n        this.setYaw(yaw, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (hfov !== undefined)\n        {this.setHfov(hfov, animated, callback, callbackArgs);}\n      return this;\n    };\n\n    /**\n * Returns the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @returns {number} North offset in degrees\n */\n    this.getNorthOffset = function() {\n      return config.northOffset;\n    };\n\n    /**\n * Sets the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @param {number} heading - North offset in degrees\n * @returns {Viewer} `this`\n */\n    this.setNorthOffset = function(heading) {\n      config.northOffset = Math.min(360, Math.max(0, heading));\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon roll in degrees\n */\n    this.getHorizonRoll = function() {\n      return config.horizonRoll;\n    };\n\n    /**\n * Sets the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @param {number} roll - Horizon roll in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonRoll = function(roll) {\n      config.horizonRoll = Math.min(90, Math.max(-90, roll));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon pitch in degrees\n */\n    this.getHorizonPitch = function() {\n      return config.horizonPitch;\n    };\n\n    /**\n * Sets the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Horizon pitch in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonPitch = function(pitch) {\n      config.horizonPitch = Math.min(90, Math.max(-90, pitch));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Start auto rotation.\n * @memberof Viewer\n * @instance\n * @param {number} [speed] - Auto rotation speed / direction. If not specified, previous value is used.\n * @returns {Viewer} `this`\n */\n    this.startAutoRotate = function(speed) {\n      speed = speed || autoRotateSpeed || 1;\n      config.autoRotate = speed;\n      _this.lookAt(origPitch, undefined, origHfov, 3000);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Stop auto rotation.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.stopAutoRotate = function() {\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n      config.autoRotateInactivityDelay = -1;\n      return this;\n    };\n\n    /**\n * Returns the panorama renderer.\n * @memberof Viewer\n * @instance\n * @returns {Renderer}\n */\n    this.getRenderer = function() {\n      return renderer;\n    };\n\n    /**\n * Sets update flag for dynamic content.\n * @memberof Viewer\n * @instance\n * @param {boolean} bool - Whether or not viewer should update even when still\n * @returns {Viewer} `this`\n */\n    this.setUpdate = function(bool) {\n      update = bool === true;\n      if (renderer === undefined)\n        {onImageLoad();}\n      else\n        {animateInit();}\n      return this;\n    };\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @memberof Viewer\n * @instance\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    this.mouseEventToCoords = function(event) {\n      return mouseEventToCoords(event);\n    };\n\n    /**\n * Change scene being viewed.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - Identifier of scene to switch to.\n * @param {number} [pitch] - Pitch to use with new scene\n * @param {number} [yaw] - Yaw to use with new scene\n * @param {number} [hfov] - HFOV to use with new scene\n * @returns {Viewer} `this`\n */\n    this.loadScene = function(sceneId, pitch, yaw, hfov) {\n      if (loaded !== false)\n        {loadScene(sceneId, pitch, yaw, hfov);}\n      return this;\n    };\n\n    /**\n * Get ID of current scene.\n * @memberof Viewer\n * @instance\n * @returns {string} ID of current scene\n */\n    this.getScene = function() {\n      return config.scene;\n    };\n\n    /**\n * Add a new scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the new scene\n * @param {string} config - The configuration of the new scene\n * @returns {Viewer} `this`\n */\n    this.addScene = function(sceneId, config) {\n      initialConfig.scenes[sceneId] = config;\n      return this;\n    };\n\n    /**\n * Remove a scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the scene\n * @returns {boolean} False if the scene is the current scene or if the scene doesn't exists, else true\n */\n    this.removeScene = function(sceneId) {\n      if (config.scene === sceneId || !initialConfig.scenes.hasOwnProperty(sceneId))\n        {return false;}\n      delete initialConfig.scenes[sceneId];\n      return true;\n    };\n\n    /**\n * Toggle fullscreen.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.toggleFullscreen = function() {\n      toggleFullscreen();\n      return this;\n    };\n\n    /**\n * Get configuration of current scene.\n * @memberof Viewer\n * @instance\n * @returns {Object} Configuration of current scene\n */\n    this.getConfig = function() {\n      return config;\n    };\n\n    /**\n * Get viewer's container element.\n * @memberof Viewer\n * @instance\n * @returns {HTMLElement} Container `div` element\n */\n    this.getContainer = function() {\n      return container;\n    };\n\n    /**\n * Add a new hot spot.\n * @memberof Viewer\n * @instance\n * @param {Object} hs - The configuration for the hot spot\n * @param {string} [sceneId] - Adds hot spot to specified scene if provided, else to current scene\n * @returns {Viewer} `this`\n * @throws Throws an error if the scene ID is provided but invalid\n */\n    this.addHotSpot = function(hs, sceneId) {\n      if (sceneId === undefined && config.scene === undefined) {\n        // Not a tour\n        config.hotSpots.push(hs);\n      } else {\n        // Tour\n        var id = sceneId !== undefined ? sceneId : config.scene;\n        if (initialConfig.scenes.hasOwnProperty(id)) {\n          if (!initialConfig.scenes[id].hasOwnProperty('hotSpots')) {\n            initialConfig.scenes[id].hotSpots = []; // Create hot spots array if needed\n            if (id == config.scene)\n              {config.hotSpots = initialConfig.scenes[id].hotSpots;}    // Link to current config\n          }\n          initialConfig.scenes[id].hotSpots.push(hs); // Add hot spot to config\n        } else {\n          throw 'Invalid scene ID!';\n        }\n      }\n      if (sceneId === undefined || config.scene == sceneId) {\n        // Add to current scene\n        createHotSpot(hs);\n        if (loaded)\n          {renderHotSpot(hs);}\n      }\n      return this;\n    };\n\n    /**\n * Remove a hot spot.\n * @memberof Viewer\n * @instance\n * @param {string} hotSpotId - The ID of the hot spot\n * @param {string} [sceneId] - Removes hot spot from specified scene if provided, else from current scene\n * @returns {boolean} True if deletion is successful, else false\n */\n    this.removeHotSpot = function(hotSpotId, sceneId) {\n      if (sceneId === undefined || config.scene == sceneId) {\n        if (!config.hotSpots)\n          {return false;}\n        for (var i = 0; i < config.hotSpots.length; i++) {\n          if (config.hotSpots[i].hasOwnProperty('id') &&\n                config.hotSpots[i].id === hotSpotId) {\n            // Delete hot spot DOM elements\n            var current = config.hotSpots[i].div;\n            while (current.parentNode != renderContainer)\n              {current = current.parentNode;}\n            renderContainer.removeChild(current);\n            delete config.hotSpots[i].div;\n            // Remove hot spot from configuration\n            config.hotSpots.splice(i, 1);\n            return true;\n          }\n        }\n      } else {\n        if (initialConfig.scenes.hasOwnProperty(sceneId)) {\n          if (!initialConfig.scenes[sceneId].hasOwnProperty('hotSpots'))\n            {return false;}\n          for (var i = 0; i < initialConfig.scenes[sceneId].hotSpots.length; i++) {\n            if (initialConfig.scenes[sceneId].hotSpots[i].hasOwnProperty('id') &&\n                    initialConfig.scenes[sceneId].hotSpots[i].id === hotSpotId) {\n              // Remove hot spot from configuration\n              initialConfig.scenes[sceneId].hotSpots.splice(i, 1);\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    };\n\n    /**\n * This method should be called if the viewer's container is resized.\n * @memberof Viewer\n * @instance\n */\n    this.resize = function() {\n      if (renderer)\n        {onDocumentResize();}\n    };\n\n    /**\n * Check if a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if a panorama is loaded, else false\n */\n    this.isLoaded = function() {\n      return loaded;\n    };\n\n    /**\n * Check if device orientation control is supported.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if supported, else false\n */\n    this.isOrientationSupported = function() {\n      return orientationSupport || false;\n    };\n\n    /**\n * Stop using device orientation.\n * @memberof Viewer\n * @instance\n */\n    this.stopOrientation = function() {\n      stopOrientation();\n    };\n\n    /**\n * Start using device orientation (does nothing if not supported).\n * @memberof Viewer\n * @instance\n */\n    this.startOrientation = function() {\n      if (orientationSupport)\n        {startOrientation();}\n    };\n\n    /**\n * Check if device orientation control is currently activated.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if active, else false\n */\n    this.isOrientationActive = function() {\n      return Boolean(orientation);\n    };\n\n    /**\n * Subscribe listener to specified event.\n * @memberof Viewer\n * @instance\n * @param {string} type - Type of event to subscribe to.\n * @param {Function} listener - Listener function to subscribe to event.\n * @returns {Viewer} `this`\n */\n    this.on = function(type, listener) {\n      externalEventListeners[type] = externalEventListeners[type] || [];\n      externalEventListeners[type].push(listener);\n      return this;\n    };\n\n    /**\n * Remove an event listener (or listeners).\n * @memberof Viewer\n * @param {string} [type] - Type of event to remove listeners from. If not specified, all listeners are removed.\n * @param {Function} [listener] - Listener function to remove. If not specified, all listeners of specified type are removed.\n * @returns {Viewer} `this`\n */\n    this.off = function(type, listener) {\n      if (!type) {\n        // Remove all listeners if type isn't specified\n        externalEventListeners = {};\n        return this;\n      }\n      if (listener) {\n        var i = externalEventListeners[type].indexOf(listener);\n        if (i >= 0) {\n          // Remove listener if found\n          externalEventListeners[type].splice(i, 1);\n        }\n        if (externalEventListeners[type].length == 0) {\n          // Remove category if empty\n          delete externalEventListeners[type];\n        }\n      } else {\n        // Remove category of listeners if listener isn't specified\n        delete externalEventListeners[type];\n      }\n      return this;\n    };\n\n    /**\n * Fire listeners attached to specified event.\n * @private\n * @param {string} [type] - Type of event to fire listeners for.\n */\n    function fireEvent(type) {\n      if (type in externalEventListeners) {\n        // Reverse iteration is useful, if event listener is removed inside its definition\n        for (var i = externalEventListeners[type].length; i > 0; i--) {\n          externalEventListeners[type][externalEventListeners[type].length - i].apply(null, [].slice.call(arguments, 1));\n        }\n      }\n    }\n\n    /**\n * Destructor.\n * @instance\n * @memberof Viewer\n */\n    this.destroy = function() {\n      if (renderer)\n        {renderer.destroy()};\n      if (listenersAdded) {\n        dragFix.removeEventListener('mousedown', onDocumentMouseDown, false);\n        dragFix.removeEventListener('dblclick', onDocumentDoubleClick, false);\n        document.removeEventListener('mousemove', onDocumentMouseMove, false);\n        document.removeEventListener('mouseup', onDocumentMouseUp, false);\n        container.removeEventListener('mousewheel', onDocumentMouseWheel, false);\n        container.removeEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        container.removeEventListener('mozfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('msfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('fullscreenchange', onFullScreenChange, false);\n        window.removeEventListener('resize', onDocumentResize, false);\n        window.removeEventListener('orientationchange', onDocumentResize, false);\n        container.removeEventListener('keydown', onDocumentKeyPress, false);\n        container.removeEventListener('keyup', onDocumentKeyUp, false);\n        container.removeEventListener('blur', clearKeys, false);\n        document.removeEventListener('mouseleave', onDocumentMouseUp, false);\n        dragFix.removeEventListener('touchstart', onDocumentTouchStart, false);\n        dragFix.removeEventListener('touchmove', onDocumentTouchMove, false);\n        dragFix.removeEventListener('touchend', onDocumentTouchEnd, false);\n        dragFix.removeEventListener('pointerdown', onDocumentPointerDown, false);\n        dragFix.removeEventListener('pointermove', onDocumentPointerMove, false);\n        dragFix.removeEventListener('pointerup', onDocumentPointerUp, false);\n        dragFix.removeEventListener('pointerleave', onDocumentPointerUp, false);\n      }\n      container.innerHTML = '';\n      container.classList.remove('pnlm-container');\n      uiContainer.classList.remove('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n    };\n\n  }\n\n  return {\n    viewer: function(container, config) {\n      return new Viewer(container, config);\n    }\n  };\n\n})(window, document);\n","/**\n * Provides requestAnimationFrame in a cross browser way.\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n        return window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n            window.setTimeout( callback, 1000 / 60 );\n\n        };\n\n    } )();\n\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      return row.trim();\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n","'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n","'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.parseId3TagSize = function(header, byteIndex) {\n    var\n      returnSize = (header[byteIndex + 6] << 21) |\n                   (header[byteIndex + 7] << 14) |\n                   (header[byteIndex + 8] << 7) |\n                   (header[byteIndex + 9]),\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n\n  this.parseAdtsSize = function(header, byteIndex) {\n    var\n      lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n    return (highTwo | middle) | lowThree;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = this.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = this.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n","var\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","import propTypes from \"prop-types\";\nimport React, { PureComponent } from \"react\";\nimport \"../pannellum/css/pannellum.css\";\nimport \"../pannellum/css/style-textInfo.css\";\n\nimport \"../pannellum/js/libpannellum.js\";\nimport \"../pannellum/js/pannellum.js\";\nimport \"../pannellum/js/RequestAnimationFrame\";\n\nclass Pannellum extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: Math.random()\n        .toString(36)\n        .substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    image: propTypes.string,\n    haov: propTypes.number,\n    vaov: propTypes.number,\n    vOffset: propTypes.number,\n    yaw: propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    autoRotate: propTypes.number,\n    compass: propTypes.bool,\n    preview: propTypes.string,\n    previewTitle: propTypes.string,\n    previewAuthor: propTypes.string,\n    title: propTypes.string,\n    author: propTypes.string,\n    autoLoad: propTypes.bool,\n    orientationOnByDefault: propTypes.bool,\n    showZoomCtrl: propTypes.bool,\n    keyboardZoom: propTypes.bool,\n    mouseZoom: propTypes.bool,\n    draggable: propTypes.bool,\n    disableKeyboardCtrl : propTypes.bool,\n    showFullscreenCtrl: propTypes.bool,\n    showControls: propTypes.bool,\n    onLoad: propTypes.func,\n    onScenechange: propTypes.func,\n    onScenechangefadedone: propTypes.func,\n    onError: propTypes.func,\n    onErrorcleared: propTypes.func,\n    onMousedown: propTypes.func,\n    onMouseup: propTypes.func,\n    onTouchstart: propTypes.func,\n    onTouchend: propTypes.func,\n    hotspotDebug: propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick: propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n    onRender: propTypes.func,\n  };\n\n  static defaultProps = {\n    children: [],\n    width: \"100%\",\n    height: \"400px\",\n    image: \"\",\n    haov: 360,\n    vaov: 180,\n    vOffset: 0,\n    yaw: 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    autoRotate: 0,\n    compass: false,\n    preview: \"\",\n    previewTitle: \"\",\n    previewAuthor: \"\",\n    title: \"\",\n    author: \"\",\n    autoLoad: false,\n    orientationOnByDefault: false,\n    showZoomCtrl: true,\n    keyboardZoom: true,\n    mouseZoom: true,\n    draggable: true,\n    disableKeyboardCtrl: false,\n    showFullscreenCtrl: true,\n    showControls: true,\n    onLoad: () => {},\n    onScenechange: () => {},\n    onScenechangefadedone: () => {},\n    onError: () => {},\n    onErrorcleared: () => {},\n    onMousedown: () => {},\n    onMouseup: () => {},\n    onTouchstart: () => {},\n    onTouchend: () => {},\n    hotspotDebug: false,\n    onRender: null,\n  };\n\n  renderImage = state => {\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one\n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)) {\n      hotspots.map(hotspot => {\n        switch (hotspot.props.type) {\n          case \"info\":\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              type: hotspot.props.type,\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              text: hotspot.props.text ? hotspot.props.text : \"\",\n              URL: hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              cssClass: hotspot.props.cssClass\n                ? hotspot.props.cssClass\n                : \"tooltipcss\",\n              createTooltipFunc: hotspot.props.tooltip\n                ? hotspot.props.tooltip\n                : this.hotspotTooltip,\n              createTooltipArgs: hotspot.props.tooltipArg\n                ? hotspot.props.tooltipArg\n                : {},\n              clickHandlerFunc: hotspot.props.handleClick\n                ? hotspot.props.handleClick\n                : this.handleClickHotspot,\n              clickHandlerArgs: hotspot.props.handleClickArg\n                ? hotspot.props.handleClickArg\n                : { name: \"test\" }\n            });\n          default:\n            return [];\n        }\n      });\n    }\n\n    let jsonConfig = {\n      type: \"equirectangular\",\n      panorama: this.props.image,\n      haov: this.props.haov,\n      vaov: this.props.vaov,\n      vOffset: this.props.vOffset,\n      yaw: this.props.yaw,\n      pitch: this.props.pitch,\n      hfov: this.props.hfov,\n      minHfov: this.props.minHfov,\n      maxHfov: this.props.maxHfov,\n      minPitch: this.props.minPitch,\n      maxPitch: this.props.maxPitch,\n      minYaw: this.props.minYaw,\n      maxYaw: this.props.maxYaw,\n      autoRotate: this.props.autoRotate,\n      compass: this.props.compass,\n      preview: this.props.preview,\n      previewTitle: this.props.previewTitle,\n      previewAuthor: this.props.previewAuthor,\n      author: this.props.author,\n      title: this.props.title,\n      autoLoad: this.props.autoLoad,\n      orientationOnByDefault: this.props.orientationOnByDefault,\n      showZoomCtrl: this.props.showZoomCtrl,\n      keyboardZoom: this.props.keyboardZoom,\n      mouseZoom: this.props.mouseZoom,\n      draggable: this.props.draggable,\n      disableKeyboardCtrl: this.props.disableKeyboardCtrl,\n      showFullscreenCtrl: this.props.showFullscreenCtrl,\n      showControls: this.props.showControls,\n      hotSpotDebug: this.props.hotspotDebug,\n      hotSpots: hotspotArray,\n      onRender: this.props.onRender,\n    };\n\n    Object.keys(jsonConfig).forEach(\n      key => jsonConfig[key] === \"\" && delete jsonConfig[key]\n    );\n    // this.setState({ jsonConfig });\n\n    if (state === \"update\") {\n      this.panorama.destroy();\n    } \n    this.panorama = pannellum.viewer(\n      this.props.id ? this.props.id : this.state.id,\n      jsonConfig\n    );\n\n    this.panorama.on(\"load\", this.props.onLoad);\n    this.panorama.on(\"scenechange\", this.props.onScenechange);\n    this.panorama.on(\"scenechangefadedone\", this.props.onScenechangefadedone);\n    this.panorama.on(\"error\", this.props.onError);\n    this.panorama.on(\"errorcleared\", this.props.onErrorcleared);\n    this.panorama.on(\"mousedown\", this.props.onMousedown);\n    this.panorama.on(\"mouseup\", this.props.onMouseup);\n    this.panorama.on(\"touchstart\", this.props.onTouchstart);\n    this.panorama.on(\"touchend\", this.props.onTouchend);\n    \n  };\n\n  componentDidMount = () => {\n    this.renderImage(\"mount\");\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      prevProps.image !== this.props.image ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height ||\n      prevProps.compass !== this.props.compass ||\n      prevProps.title !== this.props.title ||\n      prevProps.author !== this.props.author ||\n      prevProps.preview !== this.props.preview ||\n      prevProps.previewTitle !== this.props.previewTitle ||\n      prevProps.previewAuthor !== this.props.previewAuthor ||\n      prevProps.showZoomCtrl !== this.props.showZoomCtrl ||\n      prevProps.showFullscreenCtrl !== this.props.showFullscreenCtrl ||\n      prevProps.showControls !== this.props.showControls ||\n      prevProps.children.length !== this.props.children.length\n    ) {\n      this.renderImage(\"update\");\n    }\n    if (prevProps.maxYaw !== this.props.maxYaw ||\n      prevProps.minYaw !== this.props.minYaw ||\n      prevProps.maxPitch !== this.props.maxPitch ||\n      prevProps.minPitch !== this.props.minPitch ||\n      prevProps.maxHfov !== this.props.maxHfov ||\n      prevProps.minHfov !== this.props.minHfov){\n      this.panorama.setYawBounds([this.props.minYaw,this.props.maxYaw]);\n      this.panorama.setPitchBounds([this.props.minPitch,this.props.maxPitch]);\n      this.panorama.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n    }\n    if (prevProps.yaw !== this.props.yaw) {\n      this.panorama.setYaw(this.props.yaw);\n    }\n    if (prevProps.pitch !== this.props.pitch) {\n      this.panorama.setPitch(this.props.pitch);\n    }\n    if (prevProps.hfov !== this.props.hfov) {\n      this.panorama.setHfov(this.props.hfov);\n    }\n  }\n\n  handleClickHotspot = (e, args) => {\n    console.log(\"hotspot clicked\", args.name);\n  };\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement(\"div\");\n    hDiv.classList.add(\"hotspot\");\n    const outDiv = document.createElement(\"div\");\n    outDiv.classList.add(\"out\");\n    const inDiv = document.createElement(\"div\");\n    inDiv.classList.add(\"in\");\n    const imageDiv = document.createElement(\"div\");\n    imageDiv.classList.add(\"image\");\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  };\n\n  getViewer = () => {\n    return this.panorama;\n  };\n\n  forceRender = () => {\n    this.renderImage(\"update\");\n  };\n\n  render() {\n    let { width, height } = this.props;\n    let divStyle = {\n      width: width,\n      height: height\n    };\n    return (\n      <div\n        id={this.props.id ? this.props.id : this.state.id}\n        style={divStyle}\n        ref={node => (this.imageNode = node)}\n      />\n    );\n  }\n}\nPannellum.Hotspot = () => {};\nPannellum.Hotspot = () => {};\nexport default Pannellum;\n","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","/**\n * @license\n * Video.js 7.2.2 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.2.2\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\nvar EVENT_MAP = void 0;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.queueTrigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n\n\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // if we are a blob url, don't update the source cache\n    // blob urls can arise when playback is done via Media Source Extension (MSE)\n    // such as m3u8 sources with @videojs/http-streaming (VHS)\n    if (/^blob:/.test(src)) {\n      return;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.2.4\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n\n    var toUnsigned$1 = bin.toUnsigned;\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n    // Find the data for a box specified by its path\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n\n        type = parseType(data.subarray(i + 4, i + 8));\n\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n        i = end;\n      }\n\n      // we've finished searching all of data\n      return results;\n    };\n\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']);\n\n      // mdhd timescale\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n\n        tkhd = _findBox(trak, ['tkhd'])[0];\n        if (!tkhd) {\n          return null;\n        }\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n        if (!mdhd) {\n          return null;\n        }\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result;\n\n      // we need info from two childrend of each track fragment box\n      trafs = _findBox(fragment, ['moof', 'traf']);\n\n      // determine the start times for each track\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime;\n\n          // get the track id from the tfhd\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]);\n          // assume a 90kHz clock if no timescale was specified\n          scale = timescale[id] || 90e3;\n\n          // get the base media decode time from the tfdt\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity;\n\n          // convert base time to seconds\n          return baseTime / scale;\n        });\n      }));\n\n      // return the minimum\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i];\n\n        // Split on 'aud'-type nal units\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      }\n\n      // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      }\n\n      // Push the final frame\n      frames.push(currentFrame);\n      return frames;\n    };\n\n    // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = [];\n\n      // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts;\n\n      // store some metadata about all the Gops\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration;\n\n      // push the final Gop\n      gops.push(currentGop);\n      return gops;\n    };\n\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount;\n\n        // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    };\n\n    // generate the track's sample table from an array of gops\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          sample = sampleForFrame(currentFrame, dataOffset);\n\n          dataOffset += sample.size;\n\n          samples.push(sample);\n        }\n      }\n      return samples;\n    };\n\n    // generate the track's raw mdat data from an array of gops\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer);\n\n      // For each Gop..\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        // For each Frame..\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          // For each NAL..\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n\n    var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData;\n\n      // Find all `Emulation Prevention Bytes`\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      }\n\n      // If no Emulation Prevention Bytes were found just return the original\n      // array\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      }\n\n      // Create a new array to hold the NAL unit data\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++;\n          // Remove this position index\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n\n    // exports\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    };\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = captionPacketParser.parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = captionPacketParser.parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts;\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          // Configure the caption window if we're in roll-up mode\n          if (this.mode_ === 'rollUp') {\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp';\n        // Spec says to wipe memories when switching to roll-up\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        // This triggers data on the H264Stream\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS$1 = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$1;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$1;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var isLikelyAacData, arrayEquals, sumFrameByteLengths;\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        trackDecodeInfo.clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$2 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$2 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          trackDecodeInfo.clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = frameUtils.generateSampleTable(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$1 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n      return result;\n    },\n\n\n    // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i;\n\n        // iterate past any SPSs\n        offset = 6;\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        // iterate past any PPSs\n        numOfPictureParameterSets = data[offset];\n        offset++;\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$1(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$1(data.subarray(i, i + 4)));\n          i += 4;\n        }\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$1(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8;\n\n        // parse out the name field\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n          result.name += String.fromCharCode(data[i]);\n        }\n        // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n        result.name = decodeURIComponent(escape(result.name));\n\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        };\n\n        // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n\n        // convert fixed-point, base 16 back to a number\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n\n        i = 8;\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2;\n        // convert fixed-point, base 16 back to a number\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n\n\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n\n\n        // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n\n\n        // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n\n\n        // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n\n\n        // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n\n\n        // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n\n\n        // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        }\n\n        // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n        }\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box;\n\n      // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        // parse type-specific data\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n        box.size = size;\n        box.type = type;\n\n        // store this box and move to the next\n        result.push(box);\n        i = end;\n      }\n      return result;\n    };\n\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' ');\n\n      // iterate over all the boxes\n      return inspectedMp4.map(function (box, index) {\n\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' +\n\n        // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes';\n\n          // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key];\n\n          // print out raw bytes as hexademical\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n            if (!bytes) {\n              return prefix + '<>';\n            }\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          }\n\n          // stringify generic objects\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + (\n\n        // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun\n    };\n\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // Bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n          sample.pts = currentDts + sample.compositionTimeOffset;\n\n          currentDts += sample.duration;\n        });\n\n        allSamples = allSamples.concat(samples);\n      });\n\n      return allSamples;\n    };\n\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']);\n      // To get SEI NAL units\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = [];\n\n      // Pair up each traf with a mdat as moofs and mdats are in pairs\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']);\n        // Exactly 1 tfhd per traf\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']);\n        // Either 0 or 1 tfdt per traf\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals;\n\n        // Only parse video data for the chosen video track\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n\n      return captionNals;\n    };\n\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1;\n\n      // Stores segments seen before trackId and timescale are set\n      var segmentCache;\n      // Stores video track ID of the track being parsed\n      var trackId;\n      // Stores the timescale of the track being parsed\n      var timescale;\n      // Stores captions parsed so far\n      var parsedCaptions;\n\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true;\n\n        // Collect dispatched captions\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && (typeof timescales === 'undefined' ? 'undefined' : _typeof(timescales)) === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null;\n\n          // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId];\n\n          // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        }\n\n        // Now that a timescale and trackId is set, parse cached segments\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals);\n        // Force the parsed captions to be dispatched\n        this.flushStream();\n\n        return parsedCaptions;\n      };\n\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n\n      /**\n        * Reset caption buckets for new data\n       **/\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n\n      /**\n        * Reset caption parser\n       **/\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  // neither buffer has been created yet\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  }\n\n  // only one buffer is configured\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are configured\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are empty\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  }\n\n  // Handle the case where we have both buffers and create an\n  // intersection of the two\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length;\n\n  // A) Gather up all start and end times\n  while (count--) {\n    extents.push({ time: videoBuffered.start(count), type: 'start' });\n    extents.push({ time: videoBuffered.end(count), type: 'end' });\n  }\n  count = audioBuffered.length;\n  while (count--) {\n    extents.push({ time: audioBuffered.start(count), type: 'start' });\n    extents.push({ time: audioBuffered.end(count), type: 'end' });\n  }\n  // B) Sort them by time\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  });\n\n  // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++;\n\n      // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--;\n\n      // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    }\n\n    // F) Record overlapping ranges\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n\n    // Initialize CaptionParser if it hasn't been yet\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({ type: 'usage', name: 'hls-608' });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n    // Fmp4 CaptionParser\n    _this.captionParser_ = new CaptionParser();\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done);\n      // clears fmp4 captions\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      // This has fmp4 captions, add them to text tracks\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        });\n        // Reset stored captions since we added parsed\n        // captions to a text track at this point\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media);\n\n      // delete all buffered data to allow an immediate quality switch, then seek\n      // in place to give the browser a kick to remove any cached frames from the\n      // previous rendition\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause\n        // segments from the previously enabled rendition to load before the new playlist\n        // has finished loading\n        _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n      });\n\n      // don't need to reset audio as it is reset when media changes\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n            _this5.seekTo_(seekable$$1.end(0));\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this6.mediaSource.duration = newDuration;\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.2.4\";\n\n// since VHS handles HLS and DASH (and in the future, more types), use * to capture all\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    }\n  };\n});\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n      // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","/*\n * Video.js plugin for Pannellum\n * Copyright (c) 2015-2018 Matthew Petroff\n * MIT License\n */\nimport videojs from 'video.js'\n\n(function(document, videojs, pannellum) {\n    'use strict';\n    \n    videojs.registerPlugin('pannellum', function(config) {\n        // Create Pannellum instance\n        var player = this;\n        var container = player.el();\n        var vid = container.getElementsByTagName('video')[0],\n            pnlmContainer = document.createElement('div');\n        config = config || {};\n        config.type = 'equirectangular';\n        config.dynamic = true;\n        config.showZoomCtrl = false;\n        config.showFullscreenCtrl = false;\n        config.autoLoad = true;\n        config.panorama = vid;\n        pnlmContainer.style.visibility = 'hidden';\n        player.pnlmViewer = pannellum.viewer(pnlmContainer, config);\n        container.insertBefore(pnlmContainer, container.firstChild);\n        vid.style.display = 'none';\n    \n        // Handle update settings\n        player.on('play', function() {\n            if (vid.readyState > 1)\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('canplay', function() {\n            if (!player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('pause', function() {\n            player.pnlmViewer.setUpdate(false);\n        });\n        player.on('loadeddata', function() {\n            pnlmContainer.style.visibility = 'visible';\n        });\n        player.on('seeking', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('seeked', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(false);\n        });\n    });\n    \n    })(document, videojs, pannellum);\n    ","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\nimport '../pannellum/css/video-js.css';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/videojs-pannellum-plugin';\n\n\nclass PannellumVideo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    video: propTypes.string,\n    yaw : propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    hotspotDebug: propTypes.bool,\n    autoRotate: propTypes.number,\n    mouseZoom: propTypes.bool,\n    loop:propTypes.bool,\n    autoplay:propTypes.bool,\n    controls:propTypes.bool,\n    muted:propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick:propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n  }\n\n  static defaultProps = {\n    children:[],\n    width: '100%',\n    height: '400px',\n    video:'',\n    yaw : 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    hotspotDebug: false,\n    autoRotate: 0,\n    mouseZoom: true,\n    loop:false,\n    autoplay:true,\n    controls:false,\n    muted: true\n  }\n\n  renderVideo = (state) =>{\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one \n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)){\n      hotspots.map(hotspot =>{\n        switch (hotspot.props.type){\n\n          case \"info\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"type\":hotspot.props.type,\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"text\":hotspot.props.text ? hotspot.props.text : \"\",\n              \"URL\":hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : this.hotspotTooltip,\n              \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : this.handleClickHotspot ,\n              \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name:\"test\" },\n            });\n          default:\n            return [];\n        }\n        \n      });\n    }\n\n    if (state === \"update\"){\n      \n      this.video = videojs(this.videoNode);\n      let cuurentHS = [...this.video.pnlmViewer.getConfig().hotSpots];\n      this.video.pnlmViewer.setYaw(this.props.yaw);\n      this.video.pnlmViewer.setPitch(this.props.pitch);\n      this.video.pnlmViewer.setHfov(this.props.hfov);\n      this.video.pnlmViewer.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n      \n      //remove all hotspots\n      cuurentHS.map( hs => this.video.pnlmViewer.removeHotSpot(hs.id));\n      // Adding new hotspots\n      hotspotArray.map( hs => this.video.pnlmViewer.addHotSpot(hs));\n      // setting new video\n      this.video.src({ \n        type: 'video/mp4', \n        src: this.props.video \n      });\n      return this.video.play();\n    } else {\n      this.video = videojs(this.videoNode, {\n        loop:this.props.loop,\n        autoplay:this.props.autoplay,\n        controls:this.props.controls,\n        muted: this.props.muted,\n        plugins: {\n          pannellum: {\n            yaw : this.props.yaw,\n            pitch: this.props.pitch,\n            hfov: this.props.hfov,\n            minHfov: this.props.minHfov,\n            maxHfov: this.props.maxHfov,\n            minPitch: this.props.minPitch,\n            maxPitch: this.props.maxPitch,\n            minYaw: this.props.minYaw,\n            maxYaw: this.props.maxYaw,\n            hotSpotDebug: this.props.hotspotDebug,\n            autoRotate:this.props.autoRotate,\n            mouseZoom:this.props.mouseZoom,\n            hotSpots: hotspotArray\n          }\n        } \n      });\n      this.video.src({ type: 'video/mp4', src: this.props.video });\n      this.video.play();\n    }\n  }\n\n  componentDidMount = () => {\n    this.renderVideo(\"mount\");    \n  }\n\n  componentDidUpdate (prevProps){\n    // videojs(this.videoNode).dispose();\n    // this.videoNode.setAttribute(\"src\", this.props.video );\n    this.renderVideo(\"update\");\n\n\n  }\n\n  handleClickHotspot = (e , args) => {\n    console.log(\"hotspot clicked\" , args.name);\n  }\n\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  componentWillUnmount() {\n    videojs(this.videoNode).dispose();\n  }\n  \n  getViewer = () => {\n    return this.video.pnlmViewer;\n  }\n\n  render() {\n    let { width, height, video } = this.props;\n    let divStyle = {\n      width : width,\n      height : height\n    };\n    return (\n\n      <div data-vjs-player>\n        <video\n          id={this.props.id ? this.props.id : this.state.id}\n          className=\"video-js vjs-default-skin vjs-big-play-centered\" \n          ref={node => this.videoNode = node}\n          preload=\"none\" \n          crossOrigin=\"anonymous\"\n          style={divStyle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PannellumVideo;\n","import Pannellum from \"./elements/Pannellum\";\nimport PannellumVideo from \"./elements/PannellumVideo\";\n\nexport {\n  Pannellum,\n  PannellumVideo\n}\n;\n"],"sourceRoot":""}